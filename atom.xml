<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>高工@博客</title>
  <subtitle>记录学习的技能和遇到的问题</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-06-01T03:34:43.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Gaonana</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Background-Size 使用</title>
    <link href="http://yoursite.com/2017/06/01/background-size/"/>
    <id>http://yoursite.com/2017/06/01/background-size/</id>
    <published>2017-06-01T02:32:04.000Z</published>
    <updated>2017-06-01T03:34:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天运维人员发现了一个线上bug，banner图片在显示的时候总是显示部分区域，不能显完全，在排查的过程中，发现banner图的父元素设置 <code>width:100%;min-width:1200px;</code>；div设置了最小宽度，为1200px；但是banner图的宽为2000px，超出div宽度的部分被裁切掉了。</p>
<p>要想图片显示为div的大小，自动缩放，可以设置 背景图片的大小即 background-size属性，正好借此机会对background-size属性进行总结。</p>
<p>background-size属性一共有5个值：auto、length、percent、cover、contain。</p>
<p>1：默认值为：auto，auto；<br>2：length 和 percent一共是两个值，第一个值是设置图片的宽度，第二个值是图片的高度。如果只有一个值，那么第二个值默认为auto。<br>3：percent：为百分比值，背景图片的大小是根据相对的背景区域来做调整的；</p>
<blockquote>
<p>当图片较大，背景区域太小的时候，可通过 background-size：100% 100%；来达到，图片完全展示的效果</p>
</blockquote>
<p>4：contain：等比例放大，某一边顶格后，立即停止放大，另一百为空白区域；<br>5：cover：等比例放大，直到两边都顶格。如果有一边超出范围，那么就会出现图片缺失的问题。</p>
<h2 id="background-设置多背景"><a href="#background-设置多背景" class="headerlink" title="background 设置多背景"></a>background 设置多背景</h2><p>在CSS3中，可以设置多重背景，background的值为：url  重复   位置/大小<br>注意： 这几个属性的值可以交换位置，但是  位置/大小  必须在一起，并且中间以/分割；<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">background:</div><div class="line">	url('img/lyf.jpg') top left/100px 100px no-repeat;// 位置/大小 重复</div><div class="line">	url('img/lyf.jpg') no-repeat top center/100px 100px ;重复 位置/大小</div><div class="line">url('img/haha.jpg') no-repeat top right / 100px 100px;重复 位置/大小</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天运维人员发现了一个线上bug，banner图片在显示的时候总是显示部分区域，不能显完全，在排查的过程中，发现banner图的父元素设置 &lt;code&gt;width:100%;min-width:1200px;&lt;/code&gt;；div设置了最小宽度，为1200px；但是bann
    
    </summary>
    
      <category term="CSS" scheme="http://yoursite.com/categories/CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>ajaxFileupload(文件上传插件，自己封装的)</title>
    <link href="http://yoursite.com/2017/05/31/ajaxFileupload(%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%8F%92%E4%BB%B6%EF%BC%8C%E8%87%AA%E5%B7%B1%E5%B0%81%E8%A3%85%E7%9A%84)/"/>
    <id>http://yoursite.com/2017/05/31/ajaxFileupload(文件上传插件，自己封装的)/</id>
    <published>2017-05-31T09:13:04.000Z</published>
    <updated>2017-05-31T09:22:48.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div></pre></td><td class="code"><pre><div class="line">	<span class="comment">// JavaScript Document</span></div><div class="line">jQuery.extend(&#123;</div><div class="line">    <span class="attr">createUploadIframe</span>: <span class="function"><span class="keyword">function</span>(<span class="params">id, uri</span>)</span></div><div class="line"> &#123;</div><div class="line">   <span class="comment">//create frame</span></div><div class="line">            <span class="keyword">var</span> frameId = <span class="string">'jUploadFrame'</span> + id;</div><div class="line">            <span class="keyword">if</span>(<span class="built_in">window</span>.ActiveXObject) &#123;</div><div class="line">                <span class="keyword">var</span> io = <span class="built_in">document</span>.createElement(<span class="string">'&lt;iframe id="'</span> + frameId + <span class="string">'" name="'</span> + frameId + <span class="string">'" /&gt;'</span>);</div><div class="line">                <span class="keyword">if</span>(<span class="keyword">typeof</span> uri== <span class="string">'boolean'</span>)&#123;</div><div class="line">                    io.src = <span class="string">'javascript:false'</span>;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">typeof</span> uri== <span class="string">'string'</span>)&#123;</div><div class="line">                    io.src = uri;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">var</span> io = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>);</div><div class="line">                io.id = frameId;</div><div class="line">                io.name = frameId;</div><div class="line">            &#125;</div><div class="line">            io.style.position = <span class="string">'absolute'</span>;</div><div class="line">            io.style.top = <span class="string">'-1000px'</span>;</div><div class="line">            io.style.left = <span class="string">'-1000px'</span>;</div><div class="line">            <span class="built_in">document</span>.body.appendChild(io);</div><div class="line">            <span class="keyword">return</span> io;   </div><div class="line">    &#125;,</div><div class="line">    <span class="attr">createUploadForm</span>: <span class="function"><span class="keyword">function</span>(<span class="params">id, fileElementId</span>)</span></div><div class="line"> &#123;</div><div class="line">  <span class="comment">//create form </span></div><div class="line">  <span class="keyword">var</span> formId = <span class="string">'jUploadForm'</span> + id;</div><div class="line">  <span class="keyword">var</span> fileId = <span class="string">'jUploadFile'</span> + id;</div><div class="line">  <span class="keyword">var</span> form = jQuery(<span class="string">'&lt;form  action="" method="POST" name="'</span> + formId + <span class="string">'" id="'</span> + formId + <span class="string">'" enctype="multipart/form-data"&gt;&lt;/form&gt;'</span>); </div><div class="line">  <span class="keyword">var</span> oldElement = jQuery(<span class="string">'#'</span> + fileElementId);</div><div class="line">  <span class="keyword">var</span> newElement = jQuery(oldElement).clone();</div><div class="line">  jQuery(oldElement).attr(<span class="string">'id'</span>, fileId);</div><div class="line">  jQuery(oldElement).before(newElement);</div><div class="line">  jQuery(oldElement).appendTo(form);</div><div class="line">  <span class="comment">//set attributes</span></div><div class="line">  jQuery(form).css(<span class="string">'position'</span>, <span class="string">'absolute'</span>);</div><div class="line">  jQuery(form).css(<span class="string">'top'</span>, <span class="string">'-1200px'</span>);</div><div class="line">  jQuery(form).css(<span class="string">'left'</span>, <span class="string">'-1200px'</span>);</div><div class="line">  jQuery(form).appendTo(<span class="string">'body'</span>);  </div><div class="line">  <span class="keyword">return</span> form;</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">ajaxFileUpload</span>: <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</div><div class="line">        <span class="comment">// TODO introduce global settings, allowing the client to modify them for all requests, not only timeout  </span></div><div class="line">        s = jQuery.extend(&#123;&#125;, jQuery.ajaxSettings, s);</div><div class="line">        <span class="keyword">var</span> id = s.fileElementId;        </div><div class="line">  <span class="keyword">var</span> form = jQuery.createUploadForm(id, s.fileElementId);</div><div class="line">  <span class="keyword">var</span> io = jQuery.createUploadIframe(id, s.secureuri);</div><div class="line">  <span class="keyword">var</span> frameId = <span class="string">'jUploadFrame'</span> + id;</div><div class="line">  <span class="keyword">var</span> formId = <span class="string">'jUploadForm'</span> + id;  </div><div class="line">        <span class="keyword">if</span>( s.global &amp;&amp; ! jQuery.active++ )</div><div class="line">  &#123;</div><div class="line">   <span class="comment">// Watch for a new set of requests</span></div><div class="line">   jQuery.event.trigger( <span class="string">"ajaxStart"</span> );</div><div class="line">  &#125;            </div><div class="line">        <span class="keyword">var</span> requestDone = <span class="literal">false</span>;</div><div class="line">        <span class="comment">// Create the request object</span></div><div class="line">        <span class="keyword">var</span> xml = &#123;&#125;;   </div><div class="line">        <span class="keyword">if</span>( s.global )</div><div class="line">        &#123;</div><div class="line">         jQuery.event.trigger(<span class="string">"ajaxSend"</span>, [xml, s]);</div><div class="line">        &#125;            </div><div class="line">        <span class="keyword">var</span> uploadCallback = <span class="function"><span class="keyword">function</span>(<span class="params">isTimeout</span>)</span></div><div class="line">  &#123;  </div><div class="line">   <span class="comment">// Wait for a response to come back </span></div><div class="line">   <span class="keyword">var</span> io = <span class="built_in">document</span>.getElementById(frameId);</div><div class="line">            <span class="keyword">try</span> </div><div class="line">   &#123;    </div><div class="line">    <span class="keyword">if</span>(io.contentWindow)</div><div class="line">    &#123;</div><div class="line">      xml.responseText = io.contentWindow.document.body?io.contentWindow.document.body.innerHTML:<span class="literal">null</span>;</div><div class="line">                  xml.responseXML = io.contentWindow.document.XMLDocument?io.contentWindow.document.XMLDocument:io.contentWindow.document;</div><div class="line">      </div><div class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(io.contentDocument)</div><div class="line">    &#123;</div><div class="line">      xml.responseText = io.contentDocument.document.body?io.contentDocument.document.body.innerHTML:<span class="literal">null</span>;</div><div class="line">                 xml.responseXML = io.contentDocument.document.XMLDocument?io.contentDocument.document.XMLDocument:io.contentDocument.document;</div><div class="line">    &#125;      </div><div class="line">            &#125;<span class="keyword">catch</span>(e)</div><div class="line">   &#123;</div><div class="line">    jQuery.handleError(s, xml, <span class="literal">null</span>, e);</div><div class="line">   &#125;</div><div class="line">            <span class="keyword">if</span>( xml || isTimeout == <span class="string">"timeout"</span>) </div><div class="line">   &#123;    </div><div class="line">                requestDone = <span class="literal">true</span>;</div><div class="line">                <span class="keyword">var</span> status;</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    status = isTimeout != <span class="string">"timeout"</span> ? <span class="string">"success"</span> : <span class="string">"error"</span>;</div><div class="line">                    <span class="comment">// Make sure that the request was successful or notmodified</span></div><div class="line">                    <span class="keyword">if</span>( status != <span class="string">"error"</span> )</div><div class="line">     &#123;</div><div class="line">                        <span class="comment">// process the data (runs the xml through httpData regardless of callback)</span></div><div class="line">                        <span class="keyword">var</span> data = jQuery.uploadHttpData( xml, s.dataType );                        </div><div class="line">                        <span class="keyword">if</span>( s.success )</div><div class="line">                        &#123;</div><div class="line">       <span class="comment">// ifa local callback was specified, fire it and pass it the data</span></div><div class="line">                         s.success( data, status );</div><div class="line">                        &#125;;                 </div><div class="line">                        <span class="keyword">if</span>( s.global )</div><div class="line">                        &#123;</div><div class="line">       <span class="comment">// Fire the global callback</span></div><div class="line">                         jQuery.event.trigger( <span class="string">"ajaxSuccess"</span>, [xml, s] );</div><div class="line">                        &#125;;                            </div><div class="line">                    &#125; <span class="keyword">else</span></div><div class="line">                    &#123;</div><div class="line">                     jQuery.handleError(s, xml, status);</div><div class="line">                    &#125;</div><div class="line">                        </div><div class="line">                &#125; <span class="keyword">catch</span>(e) </div><div class="line">    &#123;</div><div class="line">                    status = <span class="string">"error"</span>;</div><div class="line">                    jQuery.handleError(s, xml, status, e);</div><div class="line">                &#125;;                </div><div class="line">                <span class="keyword">if</span>( s.global )</div><div class="line">                &#123;</div><div class="line">     <span class="comment">// The request was completed</span></div><div class="line">                 jQuery.event.trigger( <span class="string">"ajaxComplete"</span>, [xml, s] );</div><div class="line">                &#125;;</div><div class="line">                    </div><div class="line"></div><div class="line">                <span class="comment">// Handle the global AJAX counter</span></div><div class="line">                <span class="keyword">if</span>(s.global &amp;&amp; ! --jQuery.active)</div><div class="line">                &#123;</div><div class="line">                 jQuery.event.trigger(<span class="string">"ajaxStop"</span>);</div><div class="line">                &#125;;</div><div class="line">                <span class="keyword">if</span>(s.complete)</div><div class="line">                &#123;</div><div class="line">                  s.complete(xml, status);</div><div class="line">                &#125; ;                 </div><div class="line"></div><div class="line">                jQuery(io).unbind();</div><div class="line"></div><div class="line">                setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></div><div class="line">         &#123; <span class="keyword">try</span> </div><div class="line">          &#123;</div><div class="line">           jQuery(io).remove();</div><div class="line">           jQuery(form).remove(); </div><div class="line">           </div><div class="line">          &#125; <span class="keyword">catch</span>(e) </div><div class="line">          &#123;</div><div class="line">           jQuery.handleError(s, xml, <span class="literal">null</span>, e);</div><div class="line">          &#125;         </div><div class="line"></div><div class="line">         &#125;, <span class="number">100</span>);</div><div class="line"></div><div class="line">                xml = <span class="literal">null</span>;</div><div class="line"></div><div class="line">            &#125;;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// Timeout checker</span></div><div class="line">        <span class="keyword">if</span>( s.timeout &gt; <span class="number">0</span> ) </div><div class="line">  &#123;</div><div class="line">            setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">                </div><div class="line">                <span class="keyword">if</span>( !requestDone )</div><div class="line">                &#123;</div><div class="line">     <span class="comment">// Check to see ifthe request is still happening</span></div><div class="line">                 uploadCallback( <span class="string">"timeout"</span> );</div><div class="line">                &#125;</div><div class="line">                </div><div class="line">            &#125;, s.timeout);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">try</span> </div><div class="line">  &#123;</div><div class="line">   <span class="keyword">var</span> form = jQuery(<span class="string">'#'</span> + formId);</div><div class="line">   jQuery(form).attr(<span class="string">'action'</span>, s.url);</div><div class="line">   jQuery(form).attr(<span class="string">'method'</span>, <span class="string">'POST'</span>);</div><div class="line">   jQuery(form).attr(<span class="string">'target'</span>, frameId);</div><div class="line">            <span class="keyword">if</span>(form.encoding)</div><div class="line">   &#123;</div><div class="line">                form.encoding = <span class="string">'multipart/form-data'</span>;    </div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span></div><div class="line">   &#123;    </div><div class="line">                form.enctype = <span class="string">'multipart/form-data'</span>;</div><div class="line">            &#125;   </div><div class="line">            jQuery(form).submit();</div><div class="line"></div><div class="line">        &#125; <span class="keyword">catch</span>(e) </div><div class="line">  &#123;   </div><div class="line">            jQuery.handleError(s, xml, <span class="literal">null</span>, e);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(<span class="built_in">window</span>.attachEvent)&#123;</div><div class="line">            <span class="built_in">document</span>.getElementById(frameId).attachEvent(<span class="string">'onload'</span>, uploadCallback);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            <span class="built_in">document</span>.getElementById(frameId).addEventListener(<span class="string">'load'</span>, uploadCallback, <span class="literal">false</span>);</div><div class="line">        &#125;   </div><div class="line">        <span class="keyword">return</span> &#123;<span class="attr">abort</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;&#125;; </div><div class="line"></div><div class="line">    &#125;,</div><div class="line"></div><div class="line">    <span class="attr">uploadHttpData</span>: <span class="function"><span class="keyword">function</span>(<span class="params"> r, type </span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> data = !type;</div><div class="line">        data = type == <span class="string">"xml"</span> || data ? r.responseXML : r.responseText;</div><div class="line">        <span class="comment">// ifthe type is "script", eval it in global context</span></div><div class="line">        <span class="keyword">if</span>( type == <span class="string">"script"</span> )</div><div class="line">        &#123;</div><div class="line">         jQuery.globalEval( data );</div><div class="line">        &#125;</div><div class="line">            </div><div class="line">        <span class="comment">// Get the JavaScript object, ifJSON is used.</span></div><div class="line">        <span class="keyword">if</span>( type == <span class="string">"json"</span> )</div><div class="line">        &#123;</div><div class="line">         <span class="built_in">eval</span>( <span class="string">"data = "</span> + data );</div><div class="line">        &#125;</div><div class="line">            </div><div class="line">        <span class="comment">// evaluate scripts within html</span></div><div class="line">        <span class="keyword">if</span>( type == <span class="string">"html"</span> )</div><div class="line">        &#123;</div><div class="line">         jQuery(<span class="string">"&lt;div&gt;"</span>).html(data).evalScripts();</div><div class="line">        &#125;</div><div class="line">            </div><div class="line">        <span class="keyword">return</span> data;</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line">    jQuery.extend(&#123;</div><div class="line">        <span class="attr">handleError</span>: <span class="function"><span class="keyword">function</span> (<span class="params">s, xhr, status, e</span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> (s.error) &#123;</div><div class="line">                s.error.call(s.context || s, xhr, status, e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (s.global) &#123;</div><div class="line">                (s.context ? jQuery(s.context) : jQuery.event).trigger(<span class="string">"ajaxError"</span>, [xhr, s, e]);</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">httpData</span>: <span class="function"><span class="keyword">function</span> (<span class="params">xhr, type, s</span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> ct = xhr.getResponseHeader(<span class="string">"content-type"</span>),</div><div class="line">    xml = type == <span class="string">"xml"</span> || !type &amp;&amp; ct &amp;&amp; ct.indexOf(<span class="string">"xml"</span>) &gt;= <span class="number">0</span>,</div><div class="line">    data = xml ? xhr.responseXML : xhr.responseText;</div><div class="line">            <span class="keyword">if</span> (xml &amp;&amp; data.documentElement.tagName == <span class="string">"parsererror"</span>)</div><div class="line">                <span class="keyword">throw</span> <span class="string">"parsererror"</span>;</div><div class="line">            <span class="keyword">if</span> (s &amp;&amp; s.dataFilter)</div><div class="line">                data = s.dataFilter(data, type);</div><div class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span> data === <span class="string">"string"</span>) &#123;</div><div class="line">                <span class="keyword">if</span> (type == <span class="string">"script"</span>)</div><div class="line">                    jQuery.globalEval(data);</div><div class="line">                <span class="keyword">if</span> (type == <span class="string">"json"</span>)</div><div class="line">                    data = <span class="built_in">window</span>[<span class="string">"eval"</span>](<span class="string">"("</span> + data + <span class="string">")"</span>);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> data;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div></pre></td></tr></table></figure>
<p>在HTML页面中，此方法的调用方法<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$.ajaxFileUpload(&#123;</div><div class="line">        <span class="attr">url</span>: <span class="string">'?m=common&amp;c=file&amp;a=ajaxUpload&amp;fieldName=bp_file&amp;sAllowExt=pdf,PDF,doc,docx,ppt,PPT,pptx'</span>,</div><div class="line">        <span class="attr">fileElementId</span>: <span class="string">"bp_file"</span>,</div><div class="line">        <span class="attr">dataType</span>: <span class="string">'json'</span>,</div><div class="line">        <span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">data, status</span>) </span>&#123;</div><div class="line">           <span class="keyword">if</span> (data.statusCode == <span class="number">200</span>) &#123;</div><div class="line">               $(<span class="string">"#bp_file_span"</span>).html(<span class="string">"已上传："</span> + data.attachFileName);</div><div class="line">               $(<span class="string">"input[name='bp']"</span>).val(data.attachFilePath);</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">                msgAlert(<span class="string">"错误"</span>, data.message, <span class="string">"error"</span>);</div><div class="line">              &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">error</span>: <span class="function"><span class="keyword">function</span> (<span class="params">data, status, e</span>) </span>&#123;</div><div class="line">             	msgAlert(<span class="string">"错误"</span>, <span class="string">"错误，请刷新页面重试"</span>, <span class="string">"error"</span>);</div><div class="line">        &#125;</div><div class="line">  &#125;);</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
  </entry>
  
  <entry>
    <title>视频播放插件 video.js的使用</title>
    <link href="http://yoursite.com/2017/05/26/%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E6%8F%92%E4%BB%B6-video.js%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2017/05/26/视频播放插件-video.js的使用/</id>
    <published>2017-05-26T08:49:04.000Z</published>
    <updated>2017-05-26T09:19:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>video.js是一个开源的HTML5 jQuery 视频插件，即可以播放h5视频，也可以用来播放flash视频，是一个多平台支持的产品，大多数浏览器都支持。</p>
<h3 id="第一步：引入-Video-js-的JS和CSS文件。"><a href="#第一步：引入-Video-js-的JS和CSS文件。" class="headerlink" title="第一步：引入 Video.js 的JS和CSS文件。"></a>第一步：引入 Video.js 的JS和CSS文件。</h3><ul>
<li>方法1：可以下载Video.js的源码放到自己的服务器上；</li>
<li>方法2：可以使用免费的CDN托管版本<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"http://vjs.zencdn.net/4.12/video-js.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://vjs.zencdn.net/4.12/video.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="第二步：设置flash的路径，在不支持HTML5的浏览中使用flash播放视频文件"><a href="#第二步：设置flash的路径，在不支持HTML5的浏览中使用flash播放视频文件" class="headerlink" title="第二步：设置flash的路径，在不支持HTML5的浏览中使用flash播放视频文件"></a>第二步：设置flash的路径，在不支持HTML5的浏览中使用flash播放视频文件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;videojs.options.flash.swf = <span class="string">"video-js.swf"</span>;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure>
<h3 id="第三步：页面中加入video标签"><a href="#第三步：页面中加入video标签" class="headerlink" title="第三步：页面中加入video标签"></a>第三步：页面中加入video标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">	<span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">”my_video_1″</span> <span class="attr">class</span>=<span class="string">”video-js</span> <span class="attr">vjs-default-skin</span>” </span></div><div class="line">	<span class="attr">controls</span> <span class="attr">preload</span>=<span class="string">”auto”</span> <span class="attr">width</span>=<span class="string">”640″</span> <span class="attr">height</span>=<span class="string">”264″</span> <span class="attr">poster</span>=<span class="string">”my_video_poster.png”</span> <span class="attr">data-setup</span>=<span class="string">”&#123;&#125;”</span>&gt;</div><div class="line">	<span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">”my_video.mp4″</span> <span class="attr">type</span>=<span class="string">’video/mp4′</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">”my_video.webm”</span> <span class="attr">type</span>=<span class="string">’video/webm’</span>&gt;</span></div><div class="line">	//以下两个样式可以选择性的在页面中添加</div><div class="line">	<span class="tag">&lt;<span class="name">track</span> <span class="attr">kind</span>=<span class="string">"captions"</span> <span class="attr">src</span>=<span class="string">"demo.captions.vtt"</span> <span class="attr">srclang</span>=<span class="string">"en"</span> <span class="attr">label</span>=<span class="string">"English"</span>&gt;</span><span class="tag">&lt;/<span class="name">track</span>&gt;</span><span class="comment">&lt;!-- Tracks need an ending tag thanks to IE9 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">track</span> <span class="attr">kind</span>=<span class="string">"subtitles"</span> <span class="attr">src</span>=<span class="string">"demo.captions.vtt"</span> <span class="attr">srclang</span>=<span class="string">"en"</span> <span class="attr">label</span>=<span class="string">"English"</span>&gt;</span><span class="tag">&lt;/<span class="name">track</span>&gt;</span><span class="comment">&lt;!-- Tracks need an ending tag thanks to IE9 --&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>poster中放的是视频的缩略图；</li>
<li>在页面加载中，video会判断浏览器支持哪个格式视频，会自动加载可播放的视频。<ul>
<li>第一个source 放的是指向mp4视频，</li>
<li>第二个指向的是webm视频。<h3 id="修改样式"><a href="#修改样式" class="headerlink" title="修改样式"></a>修改样式</h3>默认情况下，大的播放按钮放在了左上角的，这样就不会覆盖视频内容。如果你想让这个播放按钮居中，你可以给你的 video 标签添加额外的 vjs-big-play-centered 样式，比如：<br><code>class=&quot;video-js vjs-default-skin vjs-big-play-centered&quot;</code>;<br>如果你还对播放按钮样式不满意可重新定义<code>.video-js .vjs-big-play-button{/*这里的样式重写*/}</code>。<h3 id="视频自动播放"><a href="#视频自动播放" class="headerlink" title="视频自动播放"></a>视频自动播放</h3>设置自动播放，将下面的代码加到html中的代码后面<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">	&lt;script type=<span class="string">"text/javascript"</span>&gt;</div><div class="line">    <span class="keyword">var</span> myPlayer = videojs(<span class="string">'example_video_1'</span>);</div><div class="line">    videojs(<span class="string">"example_video_1"</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> myPlayer = <span class="keyword">this</span>;</div><div class="line">        myPlayer.play();</div><div class="line">    &#125;);</div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;video.js是一个开源的HTML5 jQuery 视频插件，即可以播放h5视频，也可以用来播放flash视频，是一个多平台支持的产品，大多数浏览器都支持。&lt;/p&gt;
&lt;h3 id=&quot;第一步：引入-Video-js-的JS和CSS文件。&quot;&gt;&lt;a href=&quot;#第一步：引入-
    
    </summary>
    
      <category term="jQuery" scheme="http://yoursite.com/categories/jQuery/"/>
    
    
  </entry>
  
  <entry>
    <title>form表单常见样式整理(包括非空验证的JS)</title>
    <link href="http://yoursite.com/2017/05/25/form%E8%A1%A8%E5%8D%95%E5%8F%8A%E9%9D%9E%E7%A9%BA%E9%AA%8C%E8%AF%81%20%EF%BC%88CSS+JS%EF%BC%89/"/>
    <id>http://yoursite.com/2017/05/25/form表单及非空验证 （CSS+JS）/</id>
    <published>2017-05-25T03:34:04.000Z</published>
    <updated>2017-05-31T08:00:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>在前端工作中，form表单是很常用的样式，通常情况下我们也需要对其进行非空验证和一些常用的基本验证，比如邮箱，手机等。虽然h5的新特性中已经提供了部分API，但是由于需求不同，我们对表单的样式、写作方式也会不同，现对form表单进行整理如下：</p>
<p>表单样式整体如下：</p>
<p><img src="../img/form-example.png" width="600" height="300" alt=""></p>
<p>布局分析：    </p>
<pre><code>+ 整个布局分为3部分，提交不一定写成表单，可以由div组成。
</code></pre><p>代码结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bd_4"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"bd_1"</span>&gt;</span></div><div class="line">		<span class="comment">&lt;!--下拉框区域开始--&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">label</span>&gt;</span>所需服务<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"type"</span> <span class="attr">id</span>=<span class="string">"type"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>--请选择--<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"all"</span>&gt;</span>服务咨询<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">				#for(Map serverType : map.serverTypes)</div><div class="line">				<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"$&#123;serverType.code&#125;"</span> $&#123;<span class="attr">map.type</span> ? (<span class="attr">map.type.toInt</span> == <span class="string">serverType.code.toInt</span> ? '<span class="attr">selected</span>' <span class="attr">:</span> '') <span class="attr">:</span> ''&#125;&gt;</span>$&#123;serverType.name&#125;<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">				#end</div><div class="line">				<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"other"</span>&gt;</span>其他服务<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		<span class="comment">&lt;!--下拉框区域结束--&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">"width: 506px;height: 40px;"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">label</span> <span class="attr">id</span>=<span class="string">"type_self_lable"</span> <span class="attr">style</span>=<span class="string">"display: none"</span>&gt;</span>其他服务<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"type_self"</span> <span class="attr">id</span>=<span class="string">"type_self"</span> <span class="attr">style</span>=<span class="string">"display: none"</span> <span class="attr">maxlength</span>=<span class="string">100</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		<span class="comment">&lt;!--日期选框，使用的是WdatePicker插件--&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">label</span>&gt;</span>预约日期<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"time"</span> <span class="attr">id</span>=<span class="string">"time"</span> <span class="attr">onfocus</span>=<span class="string">"WdatePicker(&#123;dateFmt:'yyyy-MM-dd HH:mm',minDate:'%y-%M-%d %H:%m',disabledDays:[0,6]&#125;)"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">label</span>&gt;</span>联系人<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"contact"</span> <span class="attr">id</span>=<span class="string">"contact"</span> <span class="attr">maxlength</span>=<span class="string">20/</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">label</span> <span class="attr">style</span>=<span class="string">"line-height:20px;"</span>&gt;</span>公司团队名称<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">maxlength</span>=<span class="string">100</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">label</span>&gt;</span>手机号<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"mob"</span> <span class="attr">id</span>=<span class="string">"mob"</span> <span class="attr">value</span>=<span class="string">""</span>  <span class="attr">maxlength</span>=<span class="string">11/</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">label</span>&gt;</span>职务<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"job"</span> <span class="attr">id</span>=<span class="string">"job"</span> <span class="attr">maxlength</span>=<span class="string">20/</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">label</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">maxlength</span>=<span class="string">30/</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">	<span class="comment">&lt;!--所处行业，多选框--&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"bd_2"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"bd_2l"</span>&gt;</span>所处行业<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"bd_2r"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"chkbox"</span> <span class="attr">for</span>=<span class="string">"Map hy : map.hys"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hy"</span> <span class="attr">id</span>=<span class="string">"hy_$&#123;hy.ID&#125;"</span> <span class="attr">value</span>=<span class="string">"$&#123;hy.ID&#125;"</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"left"</span> <span class="attr">onclick</span>=<span class="string">"$('#hy_$&#123;hy.ID&#125;').click();"</span> <span class="attr">style</span>=<span class="string">"cursor: pointer;width: 160px;display: block;"</span> <span class="attr">title</span>=<span class="string">"$&#123;hy.value&#125;"</span>&gt;</span>$&#123;hy.value&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">	<span class="comment">&lt;!--提交--&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"bd_5"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">onclick</span>=<span class="string">"$('form').submit();"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"qx"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:window.close();"</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>样式代码：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div></pre></td><td class="code"><pre><div class="line">	<span class="selector-class">.bd_4</span> &#123;</div><div class="line">	<span class="attribute">width</span>: <span class="number">1020px</span>;</div><div class="line">	<span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.bd_4</span> <span class="selector-class">.bd_1</span> <span class="selector-tag">li</span> &#123;</div><div class="line">	<span class="attribute">width</span>: <span class="number">506px</span>;</div><div class="line">	<span class="attribute">float</span>: left;</div><div class="line">	<span class="attribute">padding-top</span>: <span class="number">30px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.bd_4</span> <span class="selector-class">.bd_1</span> <span class="selector-tag">li</span> <span class="selector-tag">label</span> &#123;</div><div class="line">	<span class="attribute">font-size</span>: <span class="number">16px</span>;</div><div class="line">	<span class="attribute">color</span>: <span class="number">#666</span>;</div><div class="line">	<span class="attribute">line-height</span>: <span class="number">40px</span>;</div><div class="line">	<span class="attribute">text-align</span>: right;</div><div class="line">	<span class="attribute">width</span>: <span class="number">78px</span>;</div><div class="line">	<span class="attribute">float</span>: left;</div><div class="line">	<span class="attribute">padding-left</span>: <span class="number">40px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.bd_4</span> <span class="selector-class">.bd_1</span> <span class="selector-tag">li</span> <span class="selector-tag">input</span> &#123;</div><div class="line">	<span class="attribute">margin</span>: <span class="number">0</span> <span class="number">20px</span> <span class="number">0</span> <span class="number">20px</span>;</div><div class="line">	<span class="attribute">float</span>: left;</div><div class="line">	<span class="attribute">width</span>: <span class="number">324px</span>;</div><div class="line">	<span class="attribute">height</span>: <span class="number">40px</span>;</div><div class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d9d9d9</span>;</div><div class="line">	<span class="attribute">padding-left</span>: <span class="number">20px</span>;</div><div class="line">	<span class="attribute">font-size</span>: <span class="number">16px</span>;</div><div class="line">	<span class="attribute">color</span>: <span class="number">#999</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.bd_4</span> <span class="selector-class">.bd_1</span> <span class="selector-tag">li</span> <span class="selector-tag">select</span> &#123;</div><div class="line">	<span class="attribute">font-size</span>: <span class="number">16px</span>;</div><div class="line">	<span class="attribute">color</span>: <span class="number">#666</span>;</div><div class="line">	<span class="attribute">text-align</span>: center;</div><div class="line">	<span class="attribute">width</span>: <span class="number">344px</span>;</div><div class="line">	<span class="attribute">height</span>: <span class="number">40px</span>;</div><div class="line">	<span class="attribute">line-height</span>: <span class="number">40px</span>;</div><div class="line">	<span class="attribute">float</span>: left;</div><div class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d9d9d9</span>;</div><div class="line">	<span class="attribute">margin-left</span>: <span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.main</span> <span class="selector-class">.bd_2</span> &#123;</div><div class="line">	<span class="attribute">clear</span>: both;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.main</span> <span class="selector-class">.bd_2</span> <span class="selector-class">.bd_2l</span> &#123;</div><div class="line">	<span class="attribute">font-size</span>: <span class="number">16px</span>;</div><div class="line">	<span class="attribute">color</span>: <span class="number">#666</span>;</div><div class="line">	<span class="attribute">line-height</span>: <span class="number">40px</span>;</div><div class="line">	<span class="attribute">padding-right</span>: <span class="number">18px</span>;</div><div class="line">	<span class="attribute">width</span>: <span class="number">116px</span>;</div><div class="line">	<span class="attribute">text-align</span>: right;</div><div class="line">	<span class="attribute">float</span>: left;</div><div class="line">	<span class="attribute">padding-top</span>: <span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.main</span> <span class="selector-class">.bd_2</span> <span class="selector-class">.bd_2r</span> &#123;</div><div class="line">	<span class="attribute">float</span>: left;</div><div class="line">	<span class="attribute">padding-top</span>: <span class="number">20px</span>;</div><div class="line">	<span class="attribute">width</span>: <span class="number">800px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.main</span> <span class="selector-class">.bd_2</span> <span class="selector-class">.bd_2r</span>	 <span class="selector-class">.chkbox</span> &#123;</div><div class="line">	<span class="attribute">margin-top</span>: <span class="number">10px</span>;</div><div class="line">	<span class="attribute">float</span>: left;</div><div class="line">	<span class="attribute">position</span>: relative;</div><div class="line">	<span class="attribute">width</span>: <span class="number">120px</span>;</div><div class="line">	<span class="attribute">overflow</span>: hidden;</div><div class="line">	<span class="attribute">display</span>: inline-block;</div><div class="line">	<span class="attribute">margin-bottom</span>: <span class="number">5px</span>;</div><div class="line">	<span class="attribute">height</span>: <span class="number">23px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.main</span> <span class="selector-class">.bd_2</span> <span class="selector-class">.bd_2r</span>	<span class="selector-class">.chkbox</span> <span class="selector-tag">span</span> &#123;</div><div class="line">	<span class="attribute">margin-left</span>: <span class="number">25px</span>;</div><div class="line">	<span class="attribute">margin-top</span>: <span class="number">3px</span>;</div><div class="line">	<span class="attribute">display</span>: inline;</div><div class="line">	<span class="attribute">height</span>: <span class="number">22px</span>;</div><div class="line">	<span class="attribute">color</span>: <span class="number">#666</span>;</div><div class="line">	<span class="attribute">width</span>: <span class="number">80px</span>;</div><div class="line">	<span class="attribute">overflow</span>: hidden;</div><div class="line">	<span class="attribute">text-overflow</span>: ellipsis;</div><div class="line">	<span class="attribute">white-space</span>: nowrap;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.main</span> <span class="selector-class">.bd_2</span> <span class="selector-class">.bd_2r</span>	<span class="selector-class">.chkbox</span> <span class="selector-tag">input</span><span class="selector-attr">[type="checkbox"]</span> &#123;</div><div class="line">	<span class="attribute">opacity</span>: <span class="number">0</span>;</div><div class="line">	<span class="attribute">float</span>: left;</div><div class="line">	<span class="attribute">left</span>: <span class="number">6px</span>;</div><div class="line">	<span class="attribute">top</span>: <span class="number">6px</span>;</div><div class="line">	<span class="attribute">position</span>: absolute;</div><div class="line">	<span class="attribute">z-index</span>: <span class="number">100</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.main</span> <span class="selector-class">.bd_2</span> <span class="selector-class">.bd_2r</span>	<span class="selector-class">.chkbox</span> <span class="selector-tag">input</span><span class="selector-attr">[type="checkbox"]</span><span class="selector-pseudo">:checked+label</span><span class="selector-pseudo">::after</span> &#123;</div><div class="line">	<span class="attribute">opacity</span>: <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.main</span> <span class="selector-class">.bd_2</span> <span class="selector-class">.bd_2r</span>	 <span class="selector-class">.chkbox</span> <span class="selector-tag">label</span><span class="selector-pseudo">::after</span> &#123;</div><div class="line">	<span class="attribute">border-color</span>: -moz-use-text-color -moz-use-text-color <span class="number">#272636</span> <span class="number">#272636</span>;</div><div class="line">	<span class="attribute">border-image</span>: none;</div><div class="line">	<span class="attribute">border-style</span>: none none solid solid;</div><div class="line">	<span class="attribute">border-width</span>: medium medium <span class="number">2px</span> <span class="number">2px</span>;</div><div class="line">	<span class="attribute">content</span>: <span class="string">""</span>;</div><div class="line">	<span class="attribute">height</span>: <span class="number">6px</span>;</div><div class="line">	<span class="attribute">left</span>: <span class="number">3px</span>;</div><div class="line">	<span class="attribute">opacity</span>: <span class="number">0</span>;</div><div class="line">	<span class="attribute">position</span>: absolute;</div><div class="line">	<span class="attribute">top</span>: <span class="number">0px</span>;</div><div class="line">	<span class="attribute">transform</span>: <span class="built_in">rotate</span>(-45deg);</div><div class="line">	<span class="attribute">width</span>: <span class="number">13px</span>;</div><div class="line">	<span class="attribute">border-radius</span>: <span class="number">1%</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.main</span> <span class="selector-class">.bd_2</span> <span class="selector-class">.bd_2r</span>	<span class="selector-class">.chkbox</span> <span class="selector-tag">label</span> &#123;</div><div class="line">	<span class="attribute">background</span>: <span class="built_in">rgba</span>(255, 255, 255, 1) none repeat scroll <span class="number">0</span> <span class="number">0</span>;</div><div class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#dbdbdb</span>;</div><div class="line">	<span class="attribute">cursor</span>: pointer;</div><div class="line">	<span class="attribute">height</span>: <span class="number">14px</span>;</div><div class="line">	<span class="attribute">position</span>: absolute;</div><div class="line">	<span class="attribute">left</span>: <span class="number">4px</span>;</div><div class="line">	<span class="attribute">top</span>: <span class="number">5px</span>;</div><div class="line">	<span class="attribute">width</span>: <span class="number">14px</span>;</div><div class="line">	<span class="attribute">border-radius</span>: <span class="number">1%</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.bd_5</span> &#123;</div><div class="line">	<span class="attribute">clear</span>: both;</div><div class="line">	<span class="attribute">width</span>: <span class="number">340px</span>;</div><div class="line">	<span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">	<span class="attribute">padding-top</span>: <span class="number">80px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.bd_5</span> <span class="selector-tag">li</span> &#123;</div><div class="line">	<span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">	<span class="attribute">height</span>: <span class="number">36px</span>;</div><div class="line">	<span class="attribute">width</span>: <span class="number">132px</span>;</div><div class="line">	<span class="attribute">background</span>: <span class="number">#2a95e5</span>;</div><div class="line">	<span class="attribute">float</span>: left;</div><div class="line">	<span class="attribute">line-height</span>: <span class="number">36px</span>;</div><div class="line">	<span class="attribute">text-align</span>: center;</div><div class="line">	<span class="attribute">border-radius</span>: <span class="number">18px</span>;</div><div class="line">	<span class="attribute">margin-right</span>: <span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.bd_5</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</div><div class="line">	<span class="attribute">display</span>: block;</div><div class="line">	<span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">	<span class="attribute">font-size</span>: <span class="number">18px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.bd_5</span> <span class="selector-class">.qx</span> &#123;</div><div class="line">	<span class="attribute">background</span>: <span class="number">#e9e9e9</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.bd_5</span> <span class="selector-class">.qx</span> <span class="selector-tag">a</span> &#123;</div><div class="line">	<span class="attribute">color</span>: <span class="number">#666</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.baoming</span> &#123;</div><div class="line">	<span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">	<span class="attribute">min-width</span>: <span class="number">1200px</span>;</div><div class="line">	<span class="attribute">background-color</span>: <span class="built_in">rgba</span>(0, 0, 0, 0.5);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.baoming</span> <span class="selector-tag">span</span> &#123;</div><div class="line">	<span class="attribute">float</span>: left;</div><div class="line">	<span class="attribute">width</span>: <span class="number">370px</span>;</div><div class="line">	<span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">	<span class="attribute">display</span>: block;</div><div class="line">	<span class="attribute">overflow</span>: hidden;</div><div class="line">	<span class="attribute">text-overflow</span>: ellipsis;</div><div class="line">	<span class="attribute">white-space</span>: nowrap;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.baoming</span> <span class="selector-tag">h1</span> &#123;</div><div class="line">	<span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">	<span class="attribute">line-height</span>: <span class="number">50px</span>;</div><div class="line">	<span class="attribute">padding</span>: <span class="number">15px</span> <span class="number">50px</span>;</div><div class="line">	<span class="attribute">word-wrap</span>: break-word;</div><div class="line">	<span class="attribute">word-break</span>: break-all;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.baoming</span> <span class="selector-tag">h1</span> <span class="selector-tag">a</span> &#123;</div><div class="line">	<span class="attribute">float</span>: right;</div><div class="line">	<span class="attribute">margin-right</span>: <span class="number">10px</span>;</div><div class="line">	<span class="attribute">margin-top</span>: <span class="number">10px</span>;</div><div class="line">	<span class="attribute">display</span>: inline-block;</div><div class="line">	<span class="attribute">margin-left</span>: <span class="number">20px</span>;</div><div class="line">	<span class="attribute">font-size</span>: <span class="number">18px</span>;</div><div class="line">	<span class="attribute">font-weight</span>: normal;</div><div class="line">	<span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">	<span class="attribute">width</span>: <span class="number">92px</span>;</div><div class="line">	<span class="attribute">height</span>: <span class="number">32px</span>;</div><div class="line">	<span class="attribute">line-height</span>: <span class="number">32px</span>;</div><div class="line">	<span class="attribute">background</span>: <span class="number">#00a8ff</span>;</div><div class="line">	<span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line">	<span class="attribute">text-align</span>: center;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.baoming_a</span> &#123;</div><div class="line">	<span class="attribute">float</span>: right;</div><div class="line">	<span class="attribute">margin-right</span>: <span class="number">10px</span>;</div><div class="line">	<span class="attribute">display</span>: inline-block;</div><div class="line">	<span class="attribute">margin-left</span>: <span class="number">20px</span>;</div><div class="line">	<span class="attribute">font-size</span>: <span class="number">18px</span>;</div><div class="line">	<span class="attribute">font-weight</span>: normal;</div><div class="line">	<span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">	<span class="attribute">width</span>: <span class="number">92px</span>;</div><div class="line">	<span class="attribute">height</span>: <span class="number">32px</span>;</div><div class="line">	<span class="attribute">line-height</span>: <span class="number">32px</span>;</div><div class="line">	<span class="attribute">background</span>: <span class="number">#00a8ff</span>;</div><div class="line">	<span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line">	<span class="attribute">text-align</span>: center;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.baoming</span> <span class="selector-tag">ul</span> &#123;</div><div class="line">	<span class="attribute">height</span>: <span class="number">40px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.baoming</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</div><div class="line">	<span class="attribute">float</span>: left;</div><div class="line">	<span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.baoming</span> <span class="selector-tag">ul</span> <span class="selector-class">.bm_1</span> &#123;</div><div class="line">	<span class="attribute">margin-left</span>: <span class="number">50px</span>;</div><div class="line">	<span class="attribute">padding-left</span>: <span class="number">20px</span>;</div><div class="line">	<span class="attribute">background</span>: <span class="built_in">url</span>(../images/pic1.png) no-repeat left;</div><div class="line">	<span class="attribute">margin-right</span>: <span class="number">20px</span>;</div><div class="line">	<span class="attribute">max-width</span>: <span class="number">550px</span>;</div><div class="line">	<span class="attribute">overflow</span>: hidden;</div><div class="line">	<span class="attribute">line-height</span>: <span class="number">40px</span>;</div><div class="line">	<span class="attribute">text-overflow</span>: ellipsis;</div><div class="line">	<span class="attribute">white-space</span>: nowrap;</div><div class="line">	<span class="attribute">padding-left</span>: <span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.baoming</span> <span class="selector-tag">ul</span> <span class="selector-class">.bm_2</span> &#123;</div><div class="line">	<span class="attribute">line-height</span>: <span class="number">40px</span>;</div><div class="line">	<span class="attribute">padding-left</span>: <span class="number">25px</span>;</div><div class="line">	<span class="attribute">background</span>: <span class="built_in">url</span>(../images/pic2.png) no-repeat left;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>对文本框中输入值的判断：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//判断当前值是否为空</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkIsBlank</span>(<span class="params">id, err</span>) </span>&#123;</div><div class="line">		<span class="keyword">var</span> val = $(<span class="string">"#"</span>+id).val();</div><div class="line">		<span class="keyword">if</span>( val == <span class="literal">null</span> || val == <span class="string">""</span> )&#123;				</div><div class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">	&#125;</div><div class="line"><span class="comment">//表单提交时对文本框中的内容进行判断</span></div><div class="line">$(<span class="string">"form"</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="comment">//验证所需服务</span></div><div class="line">	<span class="keyword">if</span>(checkIsBlank(<span class="string">"type"</span>) == <span class="literal">false</span>)&#123;</div><div class="line">		top.msgAlert(<span class="string">"错误"</span>, <span class="string">"请选择需要预约的服务！"</span>, <span class="string">"error"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">			$(<span class="string">"#type"</span>).focus();</div><div class="line">		&#125;, <span class="literal">null</span>, <span class="literal">null</span>);</div><div class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//验证其他服务</span></div><div class="line">	<span class="keyword">if</span>(($(<span class="string">"#type"</span>).val() == <span class="string">"other"</span>) &amp;&amp; (checkIsBlank(<span class="string">"type_self"</span>) == <span class="literal">false</span>) )&#123;</div><div class="line">		top.msgAlert(<span class="string">"错误"</span>, <span class="string">"请填写其它服务内容！"</span>, <span class="string">"error"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">			$(<span class="string">"#type_self"</span>).focus();</div><div class="line">		&#125;, <span class="literal">null</span>, <span class="literal">null</span>);</div><div class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//验证时间是否正确</span></div><div class="line">	<span class="keyword">if</span>(checkIsBlank(<span class="string">"time"</span>) == <span class="literal">false</span>)&#123;</div><div class="line">		top.msgAlert(<span class="string">"错误"</span>, <span class="string">"请选择预约日期！"</span>, <span class="string">"error"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">			$(<span class="string">"#time"</span>).focus();</div><div class="line">		&#125;, <span class="literal">null</span>, <span class="literal">null</span>);</div><div class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(checkIsBlank(<span class="string">"contact"</span>) == <span class="literal">false</span>)&#123;</div><div class="line">		top.msgAlert(<span class="string">"错误"</span>, <span class="string">"请填写联系人！"</span>, <span class="string">"error"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">			$(<span class="string">"#contact"</span>).focus();</div><div class="line">		&#125;, <span class="literal">null</span>, <span class="literal">null</span>);</div><div class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(checkIsBlank(<span class="string">"name"</span>) == <span class="literal">false</span>)&#123;</div><div class="line">	top.msgAlert(<span class="string">"错误"</span>, <span class="string">"请填写公司团队名称！"</span>, <span class="string">"error"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		$(<span class="string">"#name"</span>).focus();</div><div class="line">	&#125;, <span class="literal">null</span>, <span class="literal">null</span>);</div><div class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//电话号码的正则判断</span></div><div class="line">	<span class="keyword">var</span> mobileREG = <span class="regexp">/^1&#123;1&#125;\d&#123;10&#125;$/</span>;</div><div class="line">	<span class="keyword">var</span> mobile = $(<span class="string">"#mob"</span>).val();</div><div class="line">	<span class="keyword">if</span> (mobile == <span class="literal">null</span> || mobile == <span class="string">''</span> || !mobileREG.test(mobile)) &#123;</div><div class="line">		top.msgAlert(<span class="string">"错误"</span>, <span class="string">"请填写正确的手机号！"</span>, <span class="string">"error"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">			$(<span class="string">"#mob"</span>).focus();</div><div class="line">		&#125;, <span class="literal">null</span>, <span class="literal">null</span>);</div><div class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(checkIsBlank(<span class="string">"job"</span>) == <span class="literal">false</span>)&#123;</div><div class="line">		top.msgAlert(<span class="string">"错误"</span>, <span class="string">"请填写职务名称！"</span>, <span class="string">"error"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">			$(<span class="string">"#job"</span>).focus();</div><div class="line">		&#125;, <span class="literal">null</span>, <span class="literal">null</span>);</div><div class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//邮箱的正则判断</span></div><div class="line">	<span class="keyword">if</span> (<span class="regexp">/^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/</span>.test($(<span class="string">"#email"</span>).val()) == <span class="literal">false</span>) &#123;</div><div class="line">		top.msgAlert(<span class="string">"错误"</span>, <span class="string">"请填写正确的邮箱！"</span>, <span class="string">"error"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">			$(<span class="string">"#email"</span>).focus();</div><div class="line">		&#125;, <span class="literal">null</span>, <span class="literal">null</span>);</div><div class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">var</span> chk_value =[];    </div><div class="line">	 $(<span class="string">'input[name="hy"]:checked'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;    </div><div class="line">		 chk_value.push($(<span class="keyword">this</span>).val());    </div><div class="line">	 &#125;);    </div><div class="line">	 </div><div class="line">	<span class="keyword">if</span>(chk_value.length==<span class="number">0</span>)&#123;</div><div class="line">	 top.msgAlert(<span class="string">"错误"</span>, <span class="string">"请选择您所处的行业！"</span>, <span class="string">"error"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	&#125;, <span class="literal">null</span>, <span class="literal">null</span>);</div><div class="line">		<span class="keyword">return</span> <span class="literal">false</span>; </div><div class="line">	 &#125;   </div><div class="line">	 <span class="comment">//表单提交</span></div><div class="line">	$.post(<span class="string">"index.jsp?m=client&amp;c=bespeak&amp;a=save"</span>, $(<span class="string">"form"</span>).serializeArray(), <span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</div><div class="line">		top.msgAlert(result.success ? <span class="string">"消息"</span> : <span class="string">"错误"</span>, result.msg, result.success ? <span class="string">"ok"</span> : <span class="string">"error"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">			<span class="keyword">if</span>(result.success)&#123;</div><div class="line">				top.window.location = <span class="string">"index.jsp?m=client&amp;c=index&amp;a=ucenter&amp;page=6"</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;, <span class="literal">null</span>, <span class="literal">null</span>);</div><div class="line">	&#125;, <span class="string">"json"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在前端工作中，form表单是很常用的样式，通常情况下我们也需要对其进行非空验证和一些常用的基本验证，比如邮箱，手机等。虽然h5的新特性中已经提供了部分API，但是由于需求不同，我们对表单的样式、写作方式也会不同，现对form表单进行整理如下：&lt;/p&gt;
&lt;p&gt;表单样式整体如下
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
  </entry>
  
  <entry>
    <title>$.Post()使用</title>
    <link href="http://yoursite.com/2017/05/24/$.post()%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2017/05/24/$.post()使用/</id>
    <published>2017-05-24T02:27:04.000Z</published>
    <updated>2017-05-24T05:35:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要对 $.post()的使用进行介绍，$.get()的使用与其类似。<br>我们在使用$.ajax()发送请求时，可以发送 GET请求和POST请求<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$.ajax(&#123;</div><div class="line">     url:"page.php",</div><div class="line">     type:"post",</div><div class="line">     data:data,</div><div class="line">     dataType:"json",</div><div class="line">     success:function(data)&#123;&#125;,</div><div class="line">     error:function()&#123;&#125;</div><div class="line">&#125;)</div><div class="line">$.ajax(&#123;</div><div class="line">     url:"page.php?name='lisi'",</div><div class="line">     type:"get",</div><div class="line">     dataType:"json",</div><div class="line">     success:function(data)&#123;&#125;,</div><div class="line">     error:function()&#123;&#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>而 $.get()和 $.post()是 $.ajax()的简洁写法。<br>$.post(url, [data] , [callback] , [type] );</p>
<h4 id="参数："><a href="#参数：" class="headerlink" title="参数："></a>参数：</h4><ul>
<li>url: 发送请求的URL地址；</li>
<li>data: 可选，要发送给服务器的数据，以键值对的形式表示；</li>
<li>callback：可选，载入成功时回调函数(当response的返回状态是success时才调用该方法)</li>
<li>type: 客户端请求的类型(JSON，XML，HTML，text等等)；<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$.post(<span class="string">"action.php"</span>,&#123;<span class="attr">email</span>:$(<span class="string">'#email'</span>).val(),<span class="attr">address</span>:$(<span class="string">'#address'</span>).val()&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">   	$(<span class="string">'#msg'</span>).html(data);  </div><div class="line">&#125;)</div></pre></td></tr></table></figure></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要对 $.post()的使用进行介绍，$.get()的使用与其类似。&lt;br&gt;我们在使用$.ajax()发送请求时，可以发送 GET请求和POST请求&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
    
    </summary>
    
      <category term="jQuery" scheme="http://yoursite.com/categories/jQuery/"/>
    
    
  </entry>
  
  <entry>
    <title>复选框选中，closest()用法以及e.target()</title>
    <link href="http://yoursite.com/2017/05/24/%E5%A4%8D%E9%80%89%E6%A1%86%E9%80%89%E4%B8%AD%EF%BC%8Cclosest()%E7%94%A8%E6%B3%95%E4%BB%A5%E5%8F%8Ae.target()/"/>
    <id>http://yoursite.com/2017/05/24/复选框选中，closest()用法以及e.target()/</id>
    <published>2017-05-24T02:24:04.000Z</published>
    <updated>2017-05-24T02:24:59.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//复选框，当点击文本时，复选框选中；</div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"Field"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"移动互联网"</span> /&gt;</span>移动互联网<span class="tag">&lt;/<span class="name">label</span>&gt;</span> &amp;nbsp&amp;nbsp</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">required</span>  <span class="attr">name</span>=<span class="string">"Tel"</span> <span class="attr">placeholder</span>=<span class="string">"电话"</span> <span class="attr">pattern</span>=<span class="string">"\d&#123;11&#125;"</span> <span class="attr">oninvalid</span>=<span class="string">"setCustomValidity('请填写11位的手机号码')&gt;</span></span></div></pre></td></tr></table></figure>
<h2 id="closest-用法"><a href="#closest-用法" class="headerlink" title="closest()用法"></a>closest()用法</h2><p><code>closest()</code>从当前元素开始向上找，获得匹配选择器的第一个祖先元素；<br><code>parents()</code>从父元素开始找，向上遍历，直到文档的根元素为止。</p>
<p>例如：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">	<span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"one"</span> <span class="attr">class</span>=<span class="string">"level-1"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-i"</span>&gt;</span>I<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"ii"</span> <span class="attr">class</span>=<span class="string">"item-ii"</span>&gt;</span>II</div><div class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"level-2"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-a"</span>&gt;</span>A<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-b"</span>&gt;</span>B</div><div class="line">          <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"level-3"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-c"</span>&gt;</span>C<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item-iii"</span>&gt;</span>III<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<p><code>$(&#39;li.item-a&#39;).closest(&#39;ul&#39;).css(&#39;background-color&#39;, &#39;red&#39;);</code>此时所获得的是 level-2 的 ul 的颜色会变成红色；<br><code>$(&#39;li.item-a&#39;).closest(&#39;li&#39;).css(&#39;background-color&#39;, &#39;red&#39;);</code>此时A li 的背景颜色变成红色；</p>
<h2 id="e-target"><a href="#e-target" class="headerlink" title="e.target"></a>e.target</h2><p><code>e.target</code>需要看当前目标：<br>在event事件中，代表点击事件；<br>在loader事件中，代表加载对象；<br>e.target是目标对象，e.event是目标所发生的事件</p>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div
    
    </summary>
    
      <category term="knowledge" scheme="http://yoursite.com/categories/knowledge/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac配置Apache-Tomcat服务</title>
    <link href="http://yoursite.com/2017/05/16/Mac%E9%85%8D%E7%BD%AEApache-Tomcat%E6%9C%8D%E5%8A%A1/"/>
    <id>http://yoursite.com/2017/05/16/Mac配置Apache-Tomcat服务/</id>
    <published>2017-05-16T09:03:04.000Z</published>
    <updated>2017-05-16T09:46:07.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一步：下载Tomcat"><a href="#第一步：下载Tomcat" class="headerlink" title="第一步：下载Tomcat"></a>第一步：下载Tomcat</h2><p></p><p>直接上官网 <code>http://tomcat.apache.org/download-80.cgi</code>上下载对应版本的Tomcat包</p><br><img src="../img/tomcat-download.png" width="600" height="300" alt=""><p></p>
<h2 id="第二步：将下载好的包放到本地目录中"><a href="#第二步：将下载好的包放到本地目录中" class="headerlink" title="第二步：将下载好的包放到本地目录中"></a>第二步：将下载好的包放到本地目录中</h2><ol>
<li>在你的Finder中，通过<code>commnd+.</code>显示隐藏的文件夹</li>
<li>进入/usr/local,将下载好的Tomcat包放到/local目录中</li>
</ol>
<p><img src="../img/tomcat-mulu.png" width="600" height="300" alt=""></p>
<h2 id="第三步：配置环境变量"><a href="#第三步：配置环境变量" class="headerlink" title="第三步：配置环境变量"></a>第三步：配置环境变量</h2><p></p><p>为了方便以后对Tomcat的操作，可以将Tomcat的bin目录放到全局变量中，配置方法如下</p><p></p>
<ol>
<li>查看配置的变量：<code>echo $PATH</code></li>
<li>进入配置文件 <code>vim ~/.bash_profile</code></li>
<li>输入<code>i</code>进入编辑模式；</li>
<li>输入<code>export PATH=$PATH:/Users/gaonana/Documents/高娜娜文件/mongodb-osx-x86_64-3.4.3</code>;相当于在PATH变量后面多加一个自己定义的目录；</li>
<li>点击<code>esc</code>键进入末行模式；</li>
<li><code>:wq</code>保存配置文件并退出；</li>
<li>执行<code>source .bash_profile</code>使配置生效</li>
</ol>
<h2 id="第四步：-启动Tomcat"><a href="#第四步：-启动Tomcat" class="headerlink" title="第四步： 启动Tomcat"></a>第四步： 启动Tomcat</h2><ol>
<li>配置环境变量后，可以很便捷的terminal中通过 <code>startup.sh</code>启动Tomcat服务器；<blockquote>
<p>注意：如果当 <code>startup.sh</code>后出现<code>permission denied</code>时，需要对此目录进行权限设置。在terminal中，输入<code>sudo chmod 755 xxx/bin/*.sh</code>(xxx表示Tomcat的路径)；输入密码就可以了。</p>
</blockquote>
</li>
<li>在浏览器中输入 <code>localhost:8080</code>就可以直接入Tomcat服务,显示一下页面即成功</li>
</ol>
<p><img src="../img/tomcat-yemian.png" width="600" height="300" alt=""></p>
<ol>
<li>通过<code>shutdown.sh</code> 可以终止程序</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第一步：下载Tomcat&quot;&gt;&lt;a href=&quot;#第一步：下载Tomcat&quot; class=&quot;headerlink&quot; title=&quot;第一步：下载Tomcat&quot;&gt;&lt;/a&gt;第一步：下载Tomcat&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;直接上官网 &lt;code&gt;http://tomc
    
    </summary>
    
      <category term="Mac" scheme="http://yoursite.com/categories/Mac/"/>
    
    
  </entry>
  
  <entry>
    <title>Sublime快捷键总结</title>
    <link href="http://yoursite.com/2017/05/16/sublime%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://yoursite.com/2017/05/16/sublime快捷键/</id>
    <published>2017-05-16T06:35:04.000Z</published>
    <updated>2017-05-16T06:38:35.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sublime-快捷键"><a href="#sublime-快捷键" class="headerlink" title="sublime 快捷键"></a>sublime 快捷键</h1><ul>
<li><code>command + shift + o</code> 直接在浏览器中打开预览</li>
<li>在编辑Markdown文件时，<code>command+ alt + o</code>可边编辑边预览</li>
<li><code>alt+command+1</code>窗口显示1屏</li>
<li><code>alt+command+2</code>窗口显示2屏</li>
<li><code>shift+command+d</code>复制一行</li>
<li><code>command+L</code>选定一行，可连续选定多行</li>
<li><code>alt+command+插入点</code>可同时对多个插入点进行编辑</li>
<li><code>command+enter</code>可直接另起一行进行编辑</li>
<li><code>command+delete</code>可删除当前插入点前面的所有内容；连续按两次，可以删除整行内容</li>
<li><code>command+k</code>连续点击两次，可删除当前插入点后面的所有内容</li>
<li><code>command+f</code>查找</li>
<li><code>command+shift+f</code>查找替换</li>
<li><code>command+r</code>是调用方法</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;sublime-快捷键&quot;&gt;&lt;a href=&quot;#sublime-快捷键&quot; class=&quot;headerlink&quot; title=&quot;sublime 快捷键&quot;&gt;&lt;/a&gt;sublime 快捷键&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;command + shift + o&lt;/c
    
    </summary>
    
      <category term="sublime" scheme="http://yoursite.com/categories/sublime/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac修改本地hosts文件</title>
    <link href="http://yoursite.com/2017/05/16/Mac%E4%BF%AE%E6%94%B9%E6%9C%AC%E5%9C%B0hosts%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2017/05/16/Mac修改本地hosts文件/</id>
    <published>2017-05-16T06:35:04.000Z</published>
    <updated>2017-05-16T06:35:56.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hosts文件"><a href="#hosts文件" class="headerlink" title="hosts文件"></a>hosts文件</h2>  <p>   Hosts文件是系统文件，作用就是讲一些常用的网址域名 与 其对应的IP地址 建立一个关联“数据库”，当用户在浏览器中输入一个需要登录的网址时，系统会首先自动从 hosts 文件中寻找对应的 IP地址，一旦找到，系统会立即打开对应的网页，如果没有找到，系统会将对网址提交到DNS域名解析服务器上，进行IP地址的解析；</p><br>  <p>编辑hosts文件可以达到多种目的，如：加快域名解析、方便局域网用户、屏蔽网站、顺利链接系统等；</p>

<h2 id="在Mac中修改hosts文件"><a href="#在Mac中修改hosts文件" class="headerlink" title="在Mac中修改hosts文件"></a>在Mac中修改hosts文件</h2><ol>
<li>进入<code>/etc/hosts</code>文件，打开。文件默认为锁定状态，当你编辑他的时候，他会提示你创建副本，你修改的内容会添加在副本中；</li>
<li>当你在副本中修改完成后，将其保存到桌面，因为源文件没有后缀名，系统会将你的副本自动保存为<code>.txt</code>格式的文件；</li>
<li>将桌面上保存的副本文件重命名，修改为<code>hosts</code>，然后将其移动到<code>/etc</code>中，将源文件进行覆盖即可；</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;hosts文件&quot;&gt;&lt;a href=&quot;#hosts文件&quot; class=&quot;headerlink&quot; title=&quot;hosts文件&quot;&gt;&lt;/a&gt;hosts文件&lt;/h2&gt;  &lt;p&gt;   Hosts文件是系统文件，作用就是讲一些常用的网址域名 与 其对应的IP地址 建立一个关联
    
    </summary>
    
      <category term="Mac" scheme="http://yoursite.com/categories/Mac/"/>
    
    
  </entry>
  
  <entry>
    <title>Angular项目中实现图片懒加载</title>
    <link href="http://yoursite.com/2017/03/22/Angular%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD/"/>
    <id>http://yoursite.com/2017/03/22/Angular项目中实现图片懒加载/</id>
    <published>2017-03-21T16:39:04.000Z</published>
    <updated>2017-04-18T11:55:50.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>这两天一直纠结angular的图片懒加载插件中无法自拔。在使用过程深深感到js学艺不精的痛苦，想修改源码又不会修改，只能尽力压榨如何使用插件上。这里主要谈谈在使用插件的过程遇到的一些问题。</li>
</ul>
<h2 id="问题1：图片加载一排之后不再加载"><a href="#问题1：图片加载一排之后不再加载" class="headerlink" title="问题1：图片加载一排之后不再加载"></a>问题1：图片加载一排之后不再加载</h2><ul>
<li><p>使用angular-imglazyload这个插件，主要是因为这个插件小，并且不依赖jQuery库，整合到项目上运行，竟然发现只有第一排加载了，滚动后都没有响应。下面是我的代码部分：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-repeat</span>=<span class="string">"Digest in Digest_cont track by $index"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">data-ui-lazyload</span>=<span class="string">"&#123;&#123;Digest.val&#125;&#125;"</span> <span class="attr">onerror</span>=<span class="string">"this.src='img/default@2x_300X300.png'"</span>  <span class="attr">nf-if</span>=<span class="string">"Digest.type=='img'"</span>  <span class="attr">alt</span>=<span class="string">""</span> &gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-if</span>=<span class="string">"Digest.type=='txt'"</span>&gt;</span>&#123;&#123; ::Digest.val &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>然后我在CSS定义了loading图片，加载中先看到的是加载过程中的图片</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">img</span><span class="selector-attr">[data-ui-lazyload]</span>&#123;</div><div class="line">     <span class="attribute">background</span>:<span class="built_in">url</span>(../img/icons/liading.gif) no-repeat center center;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>一开始也不知道是什么情况，就将循环图片的html代码一层层的往上排查，经过反复查找发现是 图片的某个祖先元素设置了定位：<code>position:absolute</code>，这就导致了图片的div脱离了文档流，而imglazyload插件又是根据Windows监听滚动事件的。</p>
</li>
<li>解决方案：这里的解决办法就是把定位改为 <code>relative</code>就可以了。<h2 id="问题2：loading图片不出现，出现的一直是onerror定义的默认图片"><a href="#问题2：loading图片不出现，出现的一直是onerror定义的默认图片" class="headerlink" title="问题2：loading图片不出现，出现的一直是onerror定义的默认图片"></a>问题2：loading图片不出现，出现的一直是onerror定义的默认图片</h2></li>
<li>在加载过程中，不知道为什么，图片一直显示的是onerror定义的默认图片，而不是图片加载之后的图片。但是确实是得到了图片的src路径；经过排查发现，问题的主要原因是img的 <code>src=&#39;&#39;</code>属性导致的。在页面的渲染过程中，浏览器是默认查找不到图片的src路径的，只有在请求发送成功，得到返回数据之后，才能进行渲染。</li>
<li>解决方案： 直接将 img 标签中的 src 属性删除，然后等图片加载成功之后动态添加即可。</li>
<li>​</li>
</ul>
<h1 id="问题3：使用jQuery插件时this无法使用"><a href="#问题3：使用jQuery插件时this无法使用" class="headerlink" title="问题3：使用jQuery插件时this无法使用"></a>问题3：使用jQuery插件时this无法使用</h1><ul>
<li><p>要想在angular中使用jQuery插件，需要使用自定义指令（Directive）方式加载jQuery插件，但是发现this在jQuery中是无法调用的。</p>
</li>
<li><p>在angular中引入jQuery</p>
<ul>
<li>首先需要创建一个指令，采用@input方式，初始化jQuery插件；</li>
<li>在ngOnChanges时，也就是参数通过@input传入时，初始化jQuery插件</li>
<li>初始化jQuery插件需要获取dom元素，所以我们引入ElementRef，用来获取dom 元素。</li>
</ul>
</li>
<li><p>问题出现了：jQuery中回调函数，如果直接使用this，回调是无法获取angular的函数的，所以这里采用 bind的形式，把this传递进去，河阳angular中的函数才会被正确的调用。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ngOnChange()&#123;</div><div class="line">  $(<span class="keyword">this</span>._elementRef.nativeElement).daterangepicker(<span class="keyword">this</span>.dateRangePickerOptions,<span class="keyword">this</span>.dateCallback.bind(<span class="keyword">this</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>​</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;这两天一直纠结angular的图片懒加载插件中无法自拔。在使用过程深深感到js学艺不精的痛苦，想修改源码又不会修改，只能尽力压榨如何使用插件上。这里主要谈谈在使用插件的过程遇到的一些问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;问题1：图片加载一排之后不再加载&quot;
    
    </summary>
    
      <category term="Angular" scheme="http://yoursite.com/categories/Angular/"/>
    
    
  </entry>
  
  <entry>
    <title>Cookie机制和session机制的区别</title>
    <link href="http://yoursite.com/2017/03/18/sessionID%20%E5%92%8C%20cookie/"/>
    <id>http://yoursite.com/2017/03/18/sessionID 和 cookie/</id>
    <published>2017-03-17T16:39:04.000Z</published>
    <updated>2017-04-17T17:30:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、cookie机制和session机制的区别"><a href="#一、cookie机制和session机制的区别" class="headerlink" title="一、cookie机制和session机制的区别"></a>一、cookie机制和session机制的区别</h1><hr>
<ul>
<li>具体来说cookie机制采用的是在客户端保持状态的方案，而session机制采用的是在服务器端保持状态的方案。</li>
<li>同时我们也看到，由于才服务器端保持状态的方案在客户端也需要保存一个标识，所以session机制可能需要借助于cookie机制来达到保存标识的目的，但实际上还有其他选择</li>
</ul>
<hr>
<h1 id="二、会话cookie和持久cookie的区别"><a href="#二、会话cookie和持久cookie的区别" class="headerlink" title="二、会话cookie和持久cookie的区别"></a>二、会话cookie和持久cookie的区别</h1><hr>
<ul>
<li>如果不设置过期时间，则表示这个cookie生命周期为浏览器会话期间，只要关闭浏览器窗口，cookie就消失了。这种生命期为浏览会话期的cookie被称为会话cookie。会话cookie一般不保存在硬盘上而是保存在内存里。</li>
<li>如果设置了过期时间，浏览器就会把cookie保存到硬盘上，关闭后再次打开浏览器，这些cookie依然有效直到超过设定的过期时间。+</li>
<li>存储在硬盘上的cookie可以在不同的浏览器进程间共享，比如两个IE窗口。而对于保存在内存的cookie，不同的浏览器有不同的处理方式。</li>
</ul>
<hr>
<h1 id="三、如何利用实现自动登录"><a href="#三、如何利用实现自动登录" class="headerlink" title="三、如何利用实现自动登录"></a>三、如何利用实现自动登录</h1><hr>
<ul>
<li>当用户在某个网站注册后，就会收到一个惟一用户ID的cookie。客户后来重新连接时，这个用户ID会自动返回，服务器对它进行检查，确定它是否为注册用户且选择了自动登录，从而使用户务需给出明确的用户名和密码，就可以访问服务器上的资源。</li>
</ul>
<hr>
<h1 id="五、cookie的发送"><a href="#五、cookie的发送" class="headerlink" title="五、cookie的发送"></a>五、cookie的发送</h1><hr>
<ol>
<li>创建Cookie对象</li>
<li>设置最大时效</li>
<li>将Cookie放入到HTTP响应报头</li>
</ol>
<ul>
<li>如果你创建了一个cookie，并将他发送到浏览器，默认情况下它是一个会话级别的cookie:存储在浏览器的内存中，用户退出浏览器之后被删除。如果你希望浏览器将该cookie存储在磁盘上，则</li>
<li>需要使用maxAge，并给出一个以秒为单位的时间。将最大时效设为0则是命令浏览器删除该cookie。</li>
<li>发送cookie需要使用HttpServletResponse的addCookie方法，将cookie插入到一个Set-Cookie　HTTP请求报头中。由于这个方法并不修改任何之前指定的Set-Cookie报头，而是创建新的报头，因此我们将这个方法称为是addCookie，而非setCookie。同样要记住响应报头必须在任何文档内容发送到客户端之前设置。</li>
</ul>
<h1 id="六、cookie的读取"><a href="#六、cookie的读取" class="headerlink" title="六、cookie的读取"></a>六、cookie的读取</h1><hr>
<ol>
<li>调用request.getCookie</li>
</ol>
<ul>
<li>要获取有浏览器发送来的cookie，需要调用HttpServletRequest的getCookies方法，这个调用返回Cookie对象的数组，对应由HTTP请求中Cookie报头输入的值。</li>
</ul>
<ol>
<li>对数组进行循环，调用每个cookie的getName方法，直到找到感兴趣的cookie为止</li>
</ol>
<ul>
<li>cookie与你的主机(域)相关，而非你的servlet或JSP页面。因而，尽管你的servlet可能只发送了单个cookie，你也可能会得到许多不相关的cookie。</li>
</ul>
<p>例如：<br>　　String cookieName = “userID”;<br>    Cookie cookies[] = request.getCookies();<br>    if (cookies!=null){<br>        for(int i=0;i&lt;cookies.length;i++){<br>    Cookie cookie = cookies[i];<br>    if (cookieName.equals(cookie.getName())){<br>        doSomethingWith(cookie.getValue());<br>}<br>}<br>}</p>
<hr>
<p>七、如何使用cookie检测初访者</p>
<hr>
<p>A.调用HttpServletRequest.getCookies()获取Cookie数组<br>B.在循环中检索指定名字的cookie是否存在以及对应的值是否正确<br>C.如果是则退出循环并设置区别标识<br>D.根据区别标识判断用户是否为初访者从而进行不同的操作</p>
<hr>
<p>八、使用cookie检测初访者的常见错误</p>
<hr>
<p>不能仅仅因为cookie数组中不存在在特定的数据项就认为用户是个初访者。如果cookie数组为null，客户可能是一个初访者，也可能是由于用户将cookie删除或禁用造成的结果。<br>但是，如果数组非null,也不过是显示客户曾经到过你的网站或域，并不能说明他们曾经访问过你的servlet。其它servlet、JSP页面以及非Java Web应用都可以设置cookie，依据路径的设置，其中的任何cookie都有可能返回给用户的浏览器。<br>正确的做法是判断cookie数组是否为空且是否存在指定的Cookie对象且值正确。</p>
<hr>
<p>九、使用cookie属性的注意问题</p>
<hr>
<p>　　属性是从服务器发送到浏览器的报头的一部分；但它们不属于由浏览器返回给服务器的报头。　<br>　　因此除了名称和值之外，cookie属性只适用于从服务器输出到客户端的cookie；服务器端来自于浏览器的cookie并没有设置这些属性。　<br>　　因而不要期望通过request.getCookies得到的cookie中可以使用这个属性。这意味着，你不能仅仅通过设置cookie的最大时效，发出它，在随后的输入数组中查找适当的cookie,读取它的值，修改它并将它存回Cookie，从而实现不断改变的cookie值。</p>
<hr>
<p>十、如何使用cookie记录各个用户的访问计数</p>
<hr>
<p>1.获取cookie数组中专门用于统计用户访问次数的cookie的值<br>2.将值转换成int型<br>3.将值加1并用原来的名称重新创建一个Cookie对象<br>4.重新设置最大时效<br>5.将新的cookie输出</p>
<hr>
<p>十一、session在不同环境下的不同含义</p>
<hr>
<p>session，中文经常翻译为会话，其本来的含义是指有始有终的一系列动作/消息，比如打电话是从拿起电话拨号到挂断电话这中间的一系列过程可以称之为一个session。<br>然而当session一词与网络协议相关联时，它又往往隐含了“面向连接”和/或“保持状态”这样两个含义。<br>　　session在Web开发环境下的语义又有了新的扩展，它的含义是指一类用来在客户端与服务器端之间保持状态的解决方案。有时候Session也用来指这种解决方案的存储结构。</p>
<hr>
<p>十二、session的机制</p>
<hr>
<p>　　session机制是一种服务器端的机制，服务器使用一种类似于散列表的结构(也可能就是使用散列表)来保存信息。<br>但程序需要为某个客户端的请求创建一个session的时候，服务器首先检查这个客户端的请求里是否包含了一个session标识－称为session id,如果已经包含一个session id则说明以前已经为此客户创建过session，服务器就按照session id把这个session检索出来使用(如果检索不到，可能会新建一个，这种情况可能出现在服务端已经删除了该用户对应的session对象，但用户人为地在请求的URL后面附加上一个JSESSION的参数)。<br>如果客户请求不包含session id，则为此客户创建一个session并且生成一个与此session相关联的session id，这个session id将在本次响应中返回给客户端保存。</p>
<hr>
<p>十三、保存session id的几种方式</p>
<hr>
<p>A．保存session id的方式可以采用cookie，这样在交互过程中浏览器可以自动的按照规则把这个标识发送给服务器。<br>B．由于cookie可以被人为的禁止，必须有其它的机制以便在cookie被禁止时仍然能够把session id传递回服务器，经常采用的一种技术叫做URL重写，就是把session id附加在URL路径的后面，附加的方式也有两种，一种是作为URL路径的附加信息，另一种是作为查询字符串附加在URL后面。网络在整个交互过程中始终保持状态，就必须在每个客户端可能请求的路径后面都包含这个session id。<br>C．另一种技术叫做表单隐藏字段。就是服务器会自动修改表单，添加一个隐藏字段，以便在表单提交时能够把session id传递回服务器。</p>
<hr>
<p>十四、session什么时候被创建</p>
<hr>
<p>一个常见的错误是以为session在有客户端访问时就被创建，然而事实是直到某server端程序(如Servlet)调用HttpServletRequest.getSession(true)这样的语句时才会被创建。</p>
<hr>
<p>十五、session何时被删除</p>
<hr>
<p>session在下列情况下被删除：<br>A．程序调用HttpSession.invalidate()<br>B．距离上一次收到客户端发送的session id时间间隔超过了session的最大有效时间<br>C．服务器进程被停止</p>
<p>再次注意关闭浏览器只会使存储在客户端浏览器内存中的session cookie失效，不会使服务器端的session对象失效。</p>
<hr>
<p>十六、URL重写有什么缺点</p>
<hr>
<p>　　　对所有的URL使用URL重写，包括超链接，form的action，和重定向的URL。每个引用你的站点的URL，以及那些返回给用户的URL(即使通过间接手段，比如服务器重定向中的Location字段)都要添加额外的信息。<br>　　　这意味着在你的站点上不能有任何静态的HTML页面(至少静态页面中不能有任何链接到站点动态页面的链接)。因此，每个页面都必须使用servlet或JSP动态生成。即使所有的页面都动态生成，如果用户离开了会话并通过书签或链接再次回来，会话的信息都会丢失，因为存储下来的链接含有错误的标识信息－该URL后面的SESSION ID已经过期了。　　</p>
<hr>
<p>十七、使用隐藏的表单域有什么缺点</p>
<hr>
<pre><code>仅当每个页面都是有表单提交而动态生成时，才能使用这种方法。单击常规的&lt;A HREF..&gt;超文本链接并不产生表单提交，因此隐藏的表单域不能支持通常的会话跟踪，只能用于一系列特定的操作中，比如在线商店的结账过程
</code></pre><hr>
<p>十八、会话跟踪的基本步骤</p>
<hr>
<p>1．访问与当前请求相关的会话对象<br>2．查找与会话相关的信息<br>3．存储会话信息<br>4．废弃会话数据</p>
<hr>
<p>十九、getSession()/getSession(true)、getSession(false)的区别</p>
<hr>
<p>getSession()/getSession(true)：当session存在时返回该session，否则新建一个session并返回该对象<br>getSession(false)：当session存在时返回该session，否则不会新建session，返回null</p>
<hr>
<p>二十、如何将信息于会话关联起来</p>
<hr>
<p>　　setAttribute会替换任何之前设定的值；如果想要在不提供任何代替的情况下移除某个值，则应使用removeAttribute。这个方法会触发所有实现了HttpSessionBindingListener接口的值的valueUnbound<br>方法。</p>
<hr>
<p>二十一、会话属性的类型有什么限制吗</p>
<hr>
<p>通常会话属性的类型只要是Object就可以了。除了null或基本类型，如int,double,boolean。<br>如果要使用基本类型的值作为属性，必须将其转换为相应的封装类对象</p>
<hr>
<p>二十二、如何废弃会话数据</p>
<hr>
<p>A．只移除自己编写的servlet创建的数据：<br>   调用removeAttribute(“key”)将指定键关联的值废弃<br>B．删除整个会话(在当前Web应用中)：<br>   调用invalidate，将整个会话废弃掉。这样做会丢失该用户的所有会话数据，而非仅仅由我们<br>servlet或JSP页面创建的会话数据<br>C．将用户从系统中注销并删除所有属于他(或她)的会话<br>   调用logOut，将客户从Web服务器中注销，同时废弃所有与该用户相关联的会话(每个Web应用至多一个)。这个操作有可能影响到服务器上多个不同的Web应用</p>
<hr>
<p>二十三、使用isNew来判断用户是否为新旧用户的错误做法</p>
<hr>
<p>public boolean isNew()方法如果会话尚未和客户程序(浏览器)发生任何联系，则这个方法返回true，这一般是因为会话是新建的，不是由输入的客户请求所引起的。<br>但如果isNew返回false，只不过是说明他之前曾经访问该Web应用，并不代表他们曾访问过我们的servlet或JSP页面。<br>因为session是与用户相关的，在用户之前访问的每一个页面都有可能创建了会话。因此isNew为false只能说用户之前访问过该Web应用，session可以是当前页面创建，也可能是由用户之前访问过的页面创建的。<br>正确的做法是判断某个session中是否存在某个特定的key且其value是否正确</p>
<hr>
<p>二十四、Cookie的过期和Session的超时有什么区别</p>
<hr>
<p>会话的超时由服务器来维护，它不同于Cookie的失效日期。首先，会话一般基于驻留内存的cookie<br>不是持续性的cookie，因而也就没有截至日期。即使截取到JSESSIONID cookie，并为它设定一个失效日期发送出去。浏览器会话和服务器会话也会截然不同。</p>
<hr>
<p>二十五、session cookie和session对象的生命周期是一样的吗</p>
<hr>
<p>当用户关闭了浏览器虽然session cookie已经消失，但session对象仍然保存在服务器端</p>
<hr>
<p>二十六、是否只要关闭浏览器，session就消失了</p>
<hr>
<p>程序一般都是在用户做log off的时候发个指令去删除session，然而浏览器从来不会主动在关闭之前通知服务器它将要被关闭，因此服务器根本不会有机会知道浏览器已经关闭。服务器会一直保留这个会话对象直到它处于非活动状态超过设定的间隔为止。<br>之所以会有这种错误的认识，是因为大部分session机制都使用会话cookie来保存session id，而关闭浏览器后这个session id就消失了，再次连接到服务器时也就无法找到原来的session。<br>如果服务器设置的cookie被保存到硬盘上，或者使用某种手段改写浏览器发出的HTTP请求报头，把原来的session id发送到服务器，则再次打开浏览器仍然能够找到原来的session。<br>恰恰是由于关闭浏览器不会导致session被删除，迫使服务器为session设置了一个失效时间，当距离客户上一次使用session的时间超过了这个失效时间时，服务器就可以认为客户端已经停止了活动，才会把session删除以节省存储空间。<br>　　由此我们可以得出如下结论：<br>　　关闭浏览器，只会是浏览器端内存里的session cookie消失，但不会使保存在服务器端的session对象消失，同样也不会使已经保存到硬盘上的持久化cookie消失。</p>
<hr>
<p>二十七、打开两个浏览器窗口访问应用程序会使用同一个session还是不同的session</p>
<hr>
<p>通常session cookie是不能跨窗口使用的，当你新开了一个浏览器窗口进入相同页面时，系统会赋予你一个新的session id，这样我们信息共享的目的就达不到了。<br>此时我们可以先把session id保存在persistent cookie中(通过设置session的最大有效时间)，然后在新窗口中读出来，就可以得到上一个窗口的session id了，这样通过session cookie和persistent cookie的结合我们就可以实现了跨窗口的会话跟踪。</p>
<hr>
<p>二十八、如何使用会话显示每个客户的访问次数</p>
<hr>
<p>由于客户的访问次数是一个整型的变量，但session的属性类型中不能使用int，double，boolean等基本类型的变量，所以我们要用到这些基本类型的封装类型对象作为session对象中属性的值<br>　　但像Integer是一种不可修改(Immutable)的数据结构：构建后就不能更改。这意味着每个请求都必须创建新的Integer对象，之后使用setAttribute来代替之前存在的老的属性的值。例如：<br>HttpSession session = request.getSession();<br>SomeImmutalbeClass value = (SomeImmutableClass)session.getAttribute(“SomeIdentifier”);<br>if (value= =null){<br>    value = new SomeImmutableClass(…);　// 新创建一个不可更改对象<br>}else{<br>    value = new SomeImmutableClass(calculatedFrom(value)); // 对value重新计算后创建新的对象<br>}<br>session.setAttribute(“someIdentifier”,value); // 使用新创建的对象覆盖原来的老的对象</p>
<hr>
<p>二十九、如何使用会话累计用户的数据</p>
<hr>
<p>使用可变的数据结构，比如数组、List、Map或含有可写字段的应用程序专有的数据结构。通过这种方式，除非首次分配对象，否则不需要调用setAttribute。例如</p>
<p>HttpSession session = request.getSession();<br>SomeMutableClass value = (SomeMutableClass)session.getAttribute(“someIdentifier”);<br>if(value = = null){<br>    value = new SomeMutableClass(…);<br>    session.setAttribute(“someIdentifier”,value);<br>}else{<br>    value.updateInternalAttribute(…);     // 如果已经存在该对象则更新其属性而不需重新设置属性<br>}</p>
<hr>
<p>三十、不可更改对象和可更改对象在会话数据更新时的不同处理</p>
<hr>
<p>不可更改对象因为一旦创建之后就不能更改，所以每次要修改会话中属性的值的时候，都需要<br>调用setAttribute(“someIdentifier”,newValue)来代替原有的属性的值，否则属性的值不会被更新<br>可更改对象因为其自身一般提供了修改自身属性的方法，所以每次要修改会话中属性的值的时<br>候，只要调用该可更改对象的相关修改自身属性的方法就可以了。这意味着我们就不需要调<br>用setAttribute方法了</p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、cookie机制和session机制的区别&quot;&gt;&lt;a href=&quot;#一、cookie机制和session机制的区别&quot; class=&quot;headerlink&quot; title=&quot;一、cookie机制和session机制的区别&quot;&gt;&lt;/a&gt;一、cookie机制和sessio
    
    </summary>
    
      <category term="Angular" scheme="http://yoursite.com/categories/Angular/"/>
    
    
  </entry>
  
  <entry>
    <title>Gulp基本使用</title>
    <link href="http://yoursite.com/2017/03/14/Gulp%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2017/03/14/Gulp基本使用/</id>
    <published>2017-03-14T04:39:04.000Z</published>
    <updated>2017-04-12T03:47:48.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Gulp的基本使用"><a href="#Gulp的基本使用" class="headerlink" title="Gulp的基本使用"></a>Gulp的基本使用</h1><h2 id="数据双向绑定"><a href="#数据双向绑定" class="headerlink" title="数据双向绑定"></a>数据双向绑定</h2><ul>
<li>则在该ngCtl的作用域内的HTML标签, 其值或者操作都可以通过$scope的方式跟js中的属性和方法进行绑定. </li>
</ul>
<h2 id="脏值检测"><a href="#脏值检测" class="headerlink" title="脏值检测"></a>脏值检测</h2><ul>
<li>当数值发生变化时，触发了一个事件，去调用这个脏值检测的函数；</li>
<li>路径与目录的关系；</li>
</ul>
<h2 id="php中数据格式的转换"><a href="#php中数据格式的转换" class="headerlink" title="php中数据格式的转换"></a>php中数据格式的转换</h2><ul>
<li>在PHP中，将数组以json对象的格式进行输出， json_encode(array);</li>
<li>在PHP中，将对象形式的数据转换成数组， json_decode(obj,true);<ul>
<li>注意参数为true时，才会转换成数组；</li>
</ul>
</li>
<li>PHP中如果需要同时输出两组数据，可以将这个对象格式的数据转换成数组，然后</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"> header(<span class="string">'Content-Type:application/json'</span>);</div><div class="line">  $recUrl = <span class="string">'https://moment.douban.com/api/auth_authors/rec?alt=json&amp;apikey=0bcf52793711959c236df76ba534c0d4&amp;app_version=1.7.4&amp;count=20&amp;douban_udid=d623045db9fcb0d5243174c1bf1a675f887047c0&amp;start=0&amp;udid=9a34d8b038ff38971050199b0c5ee9c60c6d1ca3&amp;version=6'</span>;</div><div class="line"> $allUrl = <span class="string">'https://moment.douban.com/api/auth_authors/all?alt=json&amp;apikey=0bcf52793711959c236df76ba534c0d4&amp;app_version=1.7.4&amp;count=20&amp;douban_udid=d623045db9fcb0d5243174c1bf1a675f887047c0&amp;start=0&amp;udid=9a34d8b038ff38971050199b0c5ee9c60c6d1ca3&amp;version=6'</span>;</div><div class="line">$recResult = file_get_contents($recUrl); <span class="comment">//&#123;&#125;</span></div><div class="line">$allResult = file_get_contents($allResult);  <span class="comment">//  &#123;&#125;</span></div><div class="line"></div><div class="line"> <span class="comment">//先将json 数据转换成PHP数组</span></div><div class="line"> <span class="comment">//然后再讲PHP数组处理成二维数组,再转成json</span></div><div class="line"> $recResult = json_decode($recResult,<span class="literal">true</span>);<span class="comment">//参数为true的话,才转换成一个数组;</span></div><div class="line"> $allResult = json_decode($allResult);</div><div class="line"></div><div class="line"> $result = array(<span class="string">'rec'</span> =&gt; $recResult,<span class="string">'all'</span> =&gt; $allResult);</div><div class="line"> <span class="comment">//最后将这个数组格式的数据转换成json进行输出；</span></div><div class="line"> echo json_encode($result);</div></pre></td></tr></table></figure>
<h2 id="gulp"><a href="#gulp" class="headerlink" title="gulp"></a>gulp</h2><h3 id="Gulp-构建工具"><a href="#Gulp-构建工具" class="headerlink" title="Gulp 构建工具"></a>Gulp 构建工具</h3><ul>
<li><p>常见的构建工具： Gulp Grunt F.I.S  webpack;</p>
</li>
<li><p>gulp jianshi//调用监视任务</p>
</li>
<li>gulp init 回车之后会生成一个 package.json的文件，主要是说明文件的一些基本信息，说明书；</li>
<li>npm install gulp –save-dev项目依赖；直接在package.json中添加依赖信息；</li>
<li>autoprefixer()自动添加css私有前缀</li>
<li><p>注释：build:js</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;-- build:js scripts/all.js--&gt;</div><div class="line"><span class="comment">//会自动创建scripts文件夹，并将里面的script进行合并</span></div><div class="line">    &lt;script src=‘’&gt;</div><div class="line">    <span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">‘’</span>&gt;</span><span class="xml"></span></span></div><div class="line"><span class="tag">&lt;<span class="name">--endbuild--</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>gulp 一次执行多个任务</p>
<ul>
<li>gulp.task(‘default’,[‘a’,’b’,’c’]);</li>
<li>命令行：gulp default;</li>
</ul>
</li>
</ul>
<h3 id="缓存问题的解决–参考浏览器-协商缓存；雅虎13条"><a href="#缓存问题的解决–参考浏览器-协商缓存；雅虎13条" class="headerlink" title="缓存问题的解决–参考浏览器 协商缓存；雅虎13条"></a>缓存问题的解决–参考浏览器 协商缓存；雅虎13条</h3><ul>
<li>浏览器是以请求地址作为缓存条件的，只要是地址没变，浏览器就是会用缓存，地址变了，就会重新请求；</li>
<li>内容更改的时候地址更新；可以使用md5加密；（md5是一种加密方式，加密的内容不变，加密后的信息是一致的，）–md5在线加密；</li>
<li><code>md5加密</code>这种方式叫做指纹加密</li>
<li>gulp有一个插件 rev</li>
</ul>
<h2 id="Gulp-基本使用案例"><a href="#Gulp-基本使用案例" class="headerlink" title="Gulp 基本使用案例"></a>Gulp 基本使用案例</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</div><div class="line"></div><div class="line">    less = <span class="built_in">require</span>(<span class="string">'gulp-less'</span>),</div><div class="line"></div><div class="line">    cssmin = <span class="built_in">require</span>(<span class="string">'gulp-cssmin'</span>),</div><div class="line"></div><div class="line">    autoprefixer = <span class="built_in">require</span>(<span class="string">'gulp-autoprefixer'</span>),</div><div class="line"></div><div class="line">    rev = <span class="built_in">require</span>(<span class="string">'gulp-rev'</span>),</div><div class="line"></div><div class="line">    rename = <span class="built_in">require</span>(<span class="string">'gulp-rename'</span>),</div><div class="line"></div><div class="line">    imagemin = <span class="built_in">require</span>(<span class="string">'gulp-imagemin'</span>),</div><div class="line"></div><div class="line">    useref = <span class="built_in">require</span>(<span class="string">'gulp-useref'</span>),</div><div class="line"></div><div class="line">    uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>),</div><div class="line"></div><div class="line">    gulpif = <span class="built_in">require</span>(<span class="string">'gulp-if'</span>),</div><div class="line"></div><div class="line">    htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>),</div><div class="line"></div><div class="line">    revCollector = <span class="built_in">require</span>(<span class="string">'gulp-rev-collector'</span>)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//处理css</span></div><div class="line">gulp.task(<span class="string">'css'</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">   <span class="keyword">return</span> gulp.src(<span class="string">'./public/less/main.less'</span>)</div><div class="line">        .pipe(less()) <span class="comment">//将less编译成css</span></div><div class="line">        .pipe(autoprefixer())<span class="comment">//给css添加私有前缀</span></div><div class="line">        .pipe(cssmin())<span class="comment">//将css进行压缩</span></div><div class="line">        .pipe(rev())<span class="comment">//将压缩后的css文件添加版本号</span></div><div class="line">        .pipe(gulp.dest(<span class="string">'./release/public/css'</span>))<span class="comment">//将当前的版本存储起来</span></div><div class="line">        .pipe(rev.manifest())<span class="comment">//如果文件进行了修改,记录前后修改的信息,如果有多个,后面的会把前面的覆盖,所以需要重命名</span></div><div class="line">        .pipe(rename(<span class="string">'css-mainfest.json'</span>))</div><div class="line">        .pipe(gulp.dest(<span class="string">'./release/rev'</span>))<span class="comment">//将json文件放到rev文件夹里面</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">//处理图片信息</span></div><div class="line">gulp.task(<span class="string">'image'</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'./public/images/**/*'</span>,<span class="string">'./uploads/*'</span>],&#123;<span class="attr">base</span>:<span class="string">'./'</span>&#125;)<span class="comment">//如果路径文件夹下面还有子文件夹,路径使用/**/*;为了不同的文件保存在不同的文件夹里面,设定base,会自动对应存储;</span></div><div class="line">        .pipe(imagemin())<span class="comment">//压缩图片</span></div><div class="line">        .pipe(rev())<span class="comment">//将图片重新编号</span></div><div class="line">        .pipe(gulp.dest(<span class="string">'./release'</span>))<span class="comment">//图片压缩添加序列号后保存</span></div><div class="line">        .pipe(rev.manifest())</div><div class="line">        .pipe(rename(<span class="string">'images-mainfest.json'</span>))</div><div class="line">        .pipe(gulp.dest(<span class="string">'./release.rev'</span>))</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">//处理js</span></div><div class="line">gulp.task(<span class="string">'useref'</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//js文件是在HTML中引入的,所以是在HTML中处理JS文件</span></div><div class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./index.html'</span>)</div><div class="line">        .pipe(useref())<span class="comment">//去HTML文件中查找注释,进行编译压缩等</span></div><div class="line">        .pipe(gulpif(<span class="string">'*.js'</span>,uglify()))<span class="comment">//如果文件中有JS文件,进行压缩JS</span></div><div class="line">        .pipe(gulpif(<span class="string">'*.js'</span>, rev()))<span class="comment">//文件添加序列号</span></div><div class="line">        .pipe(gulp.dest(<span class="string">'./release'</span>))</div><div class="line">        .pipe(rev.manifest())</div><div class="line">        .pipe(rename(<span class="string">'js-mainfest.json'</span>))</div><div class="line">        .pipe(gulp.dest(<span class="string">'./release/rev'</span>));</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">//处理所有的视图页面HTML</span></div><div class="line">gulp.task(<span class="string">'html'</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">   <span class="keyword">return</span> gulp.src(<span class="string">'./views/*.html'</span>)</div><div class="line">        .pipe(htmlmin(&#123;</div><div class="line">            <span class="attr">collapseWhitespace</span>:<span class="literal">true</span></div><div class="line">        &#125;))<span class="comment">//压缩HTML,需要传递参数;将空白区域进行压缩</span></div><div class="line">        .pipe(gulp.dest(<span class="string">'./release/views'</span>));</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">//处理其他部分</span></div><div class="line"></div><div class="line">gulp.task(<span class="string">'other'</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">   <span class="keyword">return</span> gulp.src([<span class="string">'./api/*.php'</span>,<span class="string">'./public/fonts/*'</span>,<span class="string">'./favicon.ico'</span>],&#123;<span class="attr">base</span>:<span class="string">'./'</span>&#125;)</div><div class="line">    <span class="comment">//因为PHP,字体,图标等文件不需要压缩,直接保存就可以</span></div><div class="line">        .pipe(gulp.dest(<span class="string">'./release'</span>));</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">//替换路径</span></div><div class="line">gulp.task(<span class="string">'rev'</span>,[<span class="string">'css'</span>,<span class="string">'useref'</span>,<span class="string">'image'</span>],<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//将记录文件边的的文件,将其在index里面的路径进行替换;</span></div><div class="line">    <span class="comment">//因为只有等其余文件都加载完成之后,index才能加载,所以需要进行依赖</span></div><div class="line">    <span class="comment">//为了保证其余加载完毕后再加载当前功能,其余功能必须return才行</span></div><div class="line">    gulp.src([<span class="string">'./release/rev/*.json'</span>,<span class="string">'./release/index.html'</span>])</div><div class="line">        .pipe(revCollector())<span class="comment">//进行文件合并</span></div><div class="line">        .pipe(gulp.dest(<span class="string">'./release'</span>));</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">//最后,将所有的任务放到一个任务中,只执行最后一个任务就可以</span></div><div class="line"></div><div class="line">gulp.task(<span class="string">'release'</span>,[<span class="string">'rev'</span>,<span class="string">'other'</span>,<span class="string">'html'</span>]);</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Gulp的基本使用&quot;&gt;&lt;a href=&quot;#Gulp的基本使用&quot; class=&quot;headerlink&quot; title=&quot;Gulp的基本使用&quot;&gt;&lt;/a&gt;Gulp的基本使用&lt;/h1&gt;&lt;h2 id=&quot;数据双向绑定&quot;&gt;&lt;a href=&quot;#数据双向绑定&quot; class=&quot;head
    
    </summary>
    
      <category term="Gulp" scheme="http://yoursite.com/categories/Gulp/"/>
    
    
  </entry>
  
  <entry>
    <title>MVC</title>
    <link href="http://yoursite.com/2017/03/10/MVC/"/>
    <id>http://yoursite.com/2017/03/10/MVC/</id>
    <published>2017-03-10T00:50:15.000Z</published>
    <updated>2017-04-12T06:41:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="小知识点"><a href="#小知识点" class="headerlink" title="小知识点"></a>小知识点</h1><ul>
<li>绝大多数网站目前都是 服务端渲染 + 客户端渲染 相结合；</li>
<li>交互方式： 异步请求 和 同步请求；</li>
<li>服务端：请求 + 处理 + 响应；</li>
<li>URL：<a href="http://www.example.com/a/b/c?name=lisi$age=18#123" target="_blank" rel="external">http://www.example.com/a/b/c?name=lisi$age=18#123</a>;<ul>
<li>端口号之后的 / 是用来个主机名端口号 做区分的；</li>
<li>请求路径URL就是一个标识，在真是的文件中不一定有对应的实际目录；URL标识是由开发人员自己制定的；</li>
</ul>
</li>
<li>图片的请求方式永远是 post;</li>
</ul>
<h2 id="服务端渲染-MVC"><a href="#服务端渲染-MVC" class="headerlink" title="服务端渲染 MVC"></a>服务端渲染 MVC</h2><ul>
<li>通过model拿数据</li>
<li>读文件把模板字符串读取出来</li>
<li>利用模板引擎解析替换渲染</li>
<li>最后将结果发送给用户； </li>
<li>view 一个文件，存储了模板字符串</li>
<li>model.js负责提供数据 （也叫作数据业务model）</li>
<li>handle相当于controller：核心作用就是处理请求，如果是服务端渲染，通过model拿数据，view，将model业务数据和view数据进行整合，最后发送给用户；</li>
<li>MVC是一种架构方式，或者是模块化的一种划分方式；核心：模块的单一职责；讲整个应用程序划分为多个模块去协同处理；</li>
</ul>
<h3 id="MVC-模块划分"><a href="#MVC-模块划分" class="headerlink" title="MVC 模块划分"></a>MVC 模块划分</h3><ul>
<li>MVC模块划分方式在任何技术领域都存在；</li>
<li>MVVM：model；view；view-model</li>
</ul>
<h3 id="事件委派"><a href="#事件委派" class="headerlink" title="事件委派"></a>事件委派</h3><ul>
<li>$(‘body’).on(‘click’,’.remove’,function(){});</li>
<li>给body里面的remove绑定事件；</li>
</ul>
<h3 id="客户端渲染和服务端渲染"><a href="#客户端渲染和服务端渲染" class="headerlink" title="客户端渲染和服务端渲染"></a>客户端渲染和服务端渲染</h3><ul>
<li>如果要处理SEO,一定要服务端渲染；</li>
<li>如果是不考虑SEO，优先考虑客户端渲染</li>
<li>客户端渲染的好处是，减轻服务端压力，提高用户体验；</li>
</ul>
<h1 id="express-外置路由使用"><a href="#express-外置路由使用" class="headerlink" title="express 外置路由使用"></a>express 外置路由使用</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//1:加载 express模块</span></div><div class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="comment">//2:调用express.Router()方法</span></div><div class="line"><span class="keyword">var</span> subApp = express.Router();</div><div class="line"></div><div class="line"><span class="comment">//3：为router添加不同的路由</span></div><div class="line">subApp.get(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">req,res</span>) </span>&#123;</div><div class="line"></div><div class="line">&#125;)</div><div class="line">subApp.get(<span class="string">'/add'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">req,res</span>) </span>&#123;</div><div class="line"></div><div class="line">&#125;)</div><div class="line">subApp.get(<span class="string">'/info'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">req,res</span>) </span>&#123;</div><div class="line"></div><div class="line">&#125;)</div><div class="line"><span class="comment">//4.将router路由容器到处</span></div><div class="line"><span class="built_in">module</span>.exports = subApp;</div></pre></td></tr></table></figure>
<ul>
<li>在app.js中</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//在appJS 文件中引入router，将router中的路由引入到appJS 中；</span></div><div class="line">app.use(router);</div></pre></td></tr></table></figure>
<h3 id="动态绝对路径"><a href="#动态绝对路径" class="headerlink" title="动态绝对路径"></a>动态绝对路径</h3><ul>
<li>动态绝对路径</li>
<li>_dirname 可以动态获取当前文件模块所属目录的绝对路径，而且不受你 执行 node 命令所处终端目录影响；利用这个属性可以拼接一个动态绝对路径；</li>
<li><code>fs.readFile(_dirname+&#39;/&#39;+&#39;a.txt&#39;,function(err,data){})</code></li>
<li><code>var path = require(&#39;path&#39;); fs.readFile(path.join(_dirname,&#39;./data/a.txt&#39;))</code>;使用path，不管文件路径中有没有./；他都会自动拼接</li>
<li>node中，为每一个模块提供了一个属性 _dirname;<ul>
<li>可以动态的获取当前文件所属目录的绝对路径</li>
<li>_dirname </li>
</ul>
</li>
<li><p>一般操作文件的相对路径只有在开发一些全局命令行工具的时候才会用到；</p>
</li>
<li><p>express没有内置模板，使用ejs, ()</p>
</li>
<li>使用ejs，会默认去views文件夹中去找数据，页面必须以后缀名为 .ejs 命名；index.ejs;</li>
<li><code>app.set(&#39;view engine&#39;,&#39;ejs&#39;)</code></li>
<li>ejs的模板语法是 &lt;% %&gt;格式，</li>
<li>设置模板文件存取目录<code>app.set(&#39;views&#39;,&#39;./test-view&#39;)</code>;这样就不自动去views目录去查找文件了，而是去<code>./test/view</code>目录去查找文件了；</li>
</ul>
<h2 id="node中文件上传模块-formidable"><a href="#node中文件上传模块-formidable" class="headerlink" title="node中文件上传模块 formidable"></a>node中文件上传模块 formidable</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">  <span class="keyword">var</span> form = <span class="keyword">new</span> formidable.IncomingForm()</div><div class="line"></div><div class="line"><span class="comment">// 配置上传的文件路径</span></div><div class="line">form.uploadDir = <span class="string">"./img/"</span>;</div><div class="line"></div><div class="line"><span class="comment">// 配置保持文件扩展名</span></div><div class="line">form.keepExtensions = <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="comment">// 同时将普通数据放到了回调函数的 fields 中了（是一个对象）</span></div><div class="line"><span class="comment">// 默认 formidable 将表单中的数据存储到了操作系统的临时目录中了</span></div><div class="line"><span class="comment">// 同时将该文件的大小、路径等信息存储到了 files 对象中了</span></div><div class="line">form.parse(req, <span class="function"><span class="keyword">function</span> (<span class="params">err, fields, files</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> (err) &#123;</div><div class="line">    <span class="keyword">throw</span> err</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">var</span> body = fields</div><div class="line">  <span class="keyword">var</span> avatarPath = files.avatar.path</div><div class="line">  avatarPath = avatarPath.substr(avatarPath.lastIndexOf(<span class="string">'\\'</span>) + <span class="number">1</span>)</div><div class="line">  body.avatar = <span class="string">'img/'</span> + avatarPath</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;小知识点&quot;&gt;&lt;a href=&quot;#小知识点&quot; class=&quot;headerlink&quot; title=&quot;小知识点&quot;&gt;&lt;/a&gt;小知识点&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;绝大多数网站目前都是 服务端渲染 + 客户端渲染 相结合；&lt;/li&gt;
&lt;li&gt;交互方式： 异步请求 和 同步请求
    
    </summary>
    
      <category term="Node" scheme="http://yoursite.com/categories/Node/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac上mongobd 的使用</title>
    <link href="http://yoursite.com/2017/03/09/Mac%E4%B8%8Amongobd%20%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2017/03/09/Mac上mongobd 的使用/</id>
    <published>2017-03-09T01:33:15.000Z</published>
    <updated>2017-04-12T06:43:52.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="小知识点"><a href="#小知识点" class="headerlink" title="小知识点"></a>小知识点</h1><ol>
<li><p>对MVC的理解</p>
<ul>
<li>MVC是一种软件开发模块化架构方式，适用于web开发的代码架构阻止模式；就是用来解耦视图和数据，利用c控制器去调度视图和模型数据的交互；</li>
<li>提高代码的可维护性<ul>
<li>解耦了视图和数据的直接交互；</li>
<li>视图数据和业务数据是完全分开的；</li>
<li>视图数据：例如表单提交上来的数据；</li>
<li>业务数据：真是的数据库中的数据； </li>
</ul>
</li>
<li>增加代码的可重用性</li>
<li>划分方式： 模块职责的单一；</li>
<li>MVVM的核心：数据驱动视图</li>
</ul>
</li>
<li><p>mongod –dbpath /Users/gaonana/Documents/高娜娜文件/data/db </p>
</li>
</ol>
<h2 id="Mac上mongobd-的使用"><a href="#Mac上mongobd-的使用" class="headerlink" title="Mac上mongobd 的使用"></a>Mac上mongobd 的使用</h2><ol>
<li>官网下载  <code>mongocd.org</code></li>
<li>配置环境变量<ul>
<li>具体配置参考<code>Mac操作系统总结</code>文档</li>
</ul>
</li>
<li><code>mongod --version</code>有版本号表示安装成功</li>
<li><code>mogond --dbpath $dbpath(数据库数据文件路径)</code>进入data所在的路径，启动服务；</li>
<li>4步骤中，可以讲data文件夹建立在<code>Macintosh HD</code>的根目录下面，data文件夹，db文件夹；以后再启动mongod服务的时候直接使用<code>mongod</code>就可以启动；</li>
<li>在另一个命令行界面，<code>mongo</code>命令就可以操作数据库了；</li>
<li><code>show dbs</code>查看当前服务实力上所有的实例</li>
</ol>
<h2 id="数据库介绍"><a href="#数据库介绍" class="headerlink" title="数据库介绍"></a>数据库介绍</h2><ul>
<li>数据库实例 -&gt; 数据库 -&gt; 表 -&gt; 记录；</li>
<li>一个数据服务中可以有多个数据库</li>
<li>一个数据库中可以有多个集合<ul>
<li>MongoDB中，把表称之为集合</li>
<li>集合，简单理解就是一个数组</li>
<li>在一个集合中，可以有多个对象（json）,上一个人特殊的json对象，在mongodb中，叫做bson;</li>
</ul>
</li>
</ul>
<h2 id="使用-MongoDB-官方提供的-mongodb-驱动包-操作-mongodb数据库；"><a href="#使用-MongoDB-官方提供的-mongodb-驱动包-操作-mongodb数据库；" class="headerlink" title="使用 MongoDB 官方提供的 mongodb     驱动包 操作 mongodb数据库；"></a>使用 MongoDB 官方提供的 mongodb     驱动包 操作 mongodb数据库；</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;小知识点&quot;&gt;&lt;a href=&quot;#小知识点&quot; class=&quot;headerlink&quot; title=&quot;小知识点&quot;&gt;&lt;/a&gt;小知识点&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;对MVC的理解&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MVC是一种软件开发模块化架构方式，适用于web开发的代码架构阻
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Cookie 和 Session 的使用</title>
    <link href="http://yoursite.com/2017/03/08/cookie%20%E5%92%8C%20session%20%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2017/03/08/cookie 和 session 的使用/</id>
    <published>2017-03-08T04:39:04.000Z</published>
    <updated>2017-04-17T16:57:35.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="cookie-和-session-的使用"><a href="#cookie-和-session-的使用" class="headerlink" title="cookie 和 session 的使用"></a>cookie 和 session 的使用</h1><h2 id="cookie和session"><a href="#cookie和session" class="headerlink" title="cookie和session"></a>cookie和session</h2><ol>
<li>Cookie通过在客户端记录信息确定用户身份，Session通过在服务器端记录信息确定用户身份</li>
<li>当 客户端第一次请求服务端时，会创建一个Session对象，所有该客户的状态信息都保存在这个Session对象里。服务端会创建一个sessionID，并将其保存在cookie中在cookie中名为sessionID:值；当再次发送请求时，服务器会先检查req中是否有sessionID，并为其分配对应 的内容；</li>
<li>cookie可以通过ＪＳ写入，有大小，和安全性等问题，但是方便，通过设置可以在多路径中进行访问。</li>
<li><p>例如购物车的demo，信息就可以存储在cookie中；用户名，密码等信息可以存在session中，返回的sessionid存储在cookie中，配合使用；</p>
</li>
<li><p>cookie进行状态管理。http是无状态管理</p>
</li>
<li>sessionStorage 在同源的同窗口始终存在数据。窗口关闭，数据销毁；  </li>
<li>url重写可以解决用户禁用cookie的情况下依然可以保持客户端和服务端的通信状态(这个是后台写的)</li>
<li><code>document.cookie</code>可以访问cookie;</li>
<li>cookie的格式:键值对;</li>
<li>多个cookie之间使用分号和空格隔开;例如:<code>username=zhangsan; age=12</code>;</li>
<li><code>document.cookie = &#39;username=zhangsan&#39;</code>在浏览器中是有缓存的,关闭浏览区可以清除;<h3 id="cookie的分类"><a href="#cookie的分类" class="headerlink" title="cookie的分类"></a>cookie的分类</h3></li>
<li>会话cookie(session cookie ):关闭浏览器之后自动清除,但是可以增加其有效期,以下例子增加了5天的有效期。</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line">date.setDate(date.getDate()+<span class="number">5</span>); </div><div class="line"><span class="built_in">document</span>.cookie=<span class="string">"username=lisi; expires="</span>+date.toGMTString();</div></pre></td></tr></table></figure>
<ol>
<li>持久cookie(persistant cookie ): 关闭浏览器,仍然存在。</li>
<li>在子路径设置的cookie,在父路径下是获取不到的;反过来可以。不可以跨域获取cookie,但是可以跨页面共享;</li>
<li><p>可以用jquery-cookie插件应用;</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">//设置cookie</span></div><div class="line"> <span class="function"><span class="keyword">function</span> <span class="title">setCookie</span>(<span class="params">key,value,expires</span>) </span>&#123;</div><div class="line">         <span class="built_in">document</span>.cookie = key +<span class="string">'='</span>+value+<span class="string">';expires='</span>+expires+<span class="string">"; path=/"</span>;</div><div class="line">     &#125;</div><div class="line"><span class="comment">//获得cookie</span></div><div class="line"> <span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">cname</span>) </span>&#123;</div><div class="line">     <span class="keyword">var</span> cookie = <span class="built_in">document</span>.cookie;</div><div class="line">     <span class="keyword">var</span> arr = cookie.split(<span class="string">'; '</span>);</div><div class="line">     <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</div><div class="line">         <span class="keyword">var</span> kv = arr[i].split(<span class="string">'='</span>);</div><div class="line">         <span class="keyword">if</span>(cname == kv[<span class="number">0</span>])&#123;</div><div class="line">             <span class="keyword">return</span> kv[<span class="number">1</span>];</div><div class="line">         &#125;</div><div class="line">     &#125;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
</li>
<li><p><code>encodeURLComponent</code>该方法会对url地址中的特殊字符进行编码(当参数中包含URL特殊字符的时候可以使用该方法进行编码处理);</p>
</li>
<li>获取sessionID<br><code>console.log($.cookie(&#39;PHPSESSID&#39;))</code>;<h3 id="cookie-使用"><a href="#cookie-使用" class="headerlink" title="$.cookie()使用"></a>$.cookie()使用</h3></li>
<li>新添加一个cookie会话;<code>$.cookie(&#39;username&#39;,&#39;zhangsan&#39;)</code>;</li>
<li>创建cookie并设置有效期为7天;<code>$.cookie(&#39;age&#39;,&#39;18&#39;,{expires:7})</code>;此时的cookie称作持久cookie,即<code>persistant cookie</code>;</li>
<li>创建cookie并设置cookie的有效路径<code>$.cookie(&#39;username&#39;,&#39;lisi&#39;,{expires:7,path:&#39;/&#39;})</code>;<ul>
<li>在默认情况下,只有cookie的页面才能读取该cookie信息,如果想让另一个页面读取该cookie信息,必须设置cookie的路径;cookie的路径用于设置能够读取cookie的顶级目录,即根目录,可以让当前项目下所有的网页都能相互读取cookie,</li>
</ul>
</li>
<li><code>raw:true</code>;在读写cookie时自动使用<code>encodeURLComponen</code>进行编码和解码;</li>
<li>删除cookie可以使用null作为cookie的值就可以<code>$.cookie(&#39;username&#39;,null)</code><h3 id="session-和-cookie之间的区别"><a href="#session-和-cookie之间的区别" class="headerlink" title="session 和 cookie之间的区别"></a>session 和 cookie之间的区别</h3></li>
</ol>
<ul>
<li>共同点： 数据都是保存在浏览器端，且是同源的</li>
<li>区别：<ol>
<li>cookie 通过在客户端记录信息确定用户身份， 数据始终在同源的 http 请求中携带，即cookie在浏览器和服务器之间来回传递；</li>
<li>session 通过在服务器端记录信息确定用户身份；</li>
<li>cookie 数据还有路径(path)的概念，可以限制 cookie 只在某个另下访问。因为每次 http 请求都会携带 cookie，所以cookie 只适合保存很小的数据。</li>
<li>http 协议是无状态协议。是无法从连接上跟踪会话的；</li>
<li>第一次发送请求，res 会向客户端浏览器颁发一个 cookie， 客户端吧 cookie 存取来，再次访问的时候会一同提交给 服务器</li>
<li>SessionStorage 存在于服务端的内存中；</li>
</ol>
</li>
</ul>
<h3 id="cookie-和session"><a href="#cookie-和session" class="headerlink" title="cookie 和session"></a>cookie 和session</h3><h3 id="LocalStorage-和-sessionStorage"><a href="#LocalStorage-和-sessionStorage" class="headerlink" title="LocalStorage 和 sessionStorage"></a>LocalStorage 和 sessionStorage</h3><pre><code>+ LocalStorage 对应的是 持久 Cookie
+ sessionStorage 对应的是 会话 Cookie
+ Cookie 是用来做状态保持的
    - Cookie 的数据，浏览器会默认把 cookie 放到 请求报文中发送给服务器
+ LocalStorage 和 sessionStorage 是用来 做本地存储的，没有 Http 协议交互内容；
</code></pre><h3 id="location的内置属性"><a href="#location的内置属性" class="headerlink" title="location的内置属性"></a>location的内置属性</h3><ul>
<li>页面跳转<code>location.href=&#39;/index/index.html&#39;</code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">ancestorOrigins:DOMStringList,</div><div class="line">assign:()</div><div class="line">hash:""</div><div class="line">host:"mybxg.com"</div><div class="line">hostname:"mybxg.com"</div><div class="line">href:"http://mybxg.com/index/index"</div><div class="line">origin:"http://mybxg.com"</div><div class="line">pathname:"/index/index"</div><div class="line">port:""</div><div class="line">protocol:"http:"</div><div class="line">reload:reload()</div><div class="line">replace:()</div><div class="line">search:""</div><div class="line">toString:toString()</div><div class="line">valueOf:valueOf()</div><div class="line">__proto__:Location</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h2><ul>
<li>静态资源服务器</li>
<li>项目管理软件: JIRA 禅道(跟踪工程进度更新,项目管理软件)</li>
<li>jQuery中的return false既可以阻止默认行为也可以阻止冒泡;但是原生JS中的return false 只能阻止默认行为;</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;cookie-和-session-的使用&quot;&gt;&lt;a href=&quot;#cookie-和-session-的使用&quot; class=&quot;headerlink&quot; title=&quot;cookie 和 session 的使用&quot;&gt;&lt;/a&gt;cookie 和 session 的使用&lt;/h1&gt;&lt;
    
    </summary>
    
      <category term="storage" scheme="http://yoursite.com/categories/storage/"/>
    
    
  </entry>
  
  <entry>
    <title>Formidable插件使用</title>
    <link href="http://yoursite.com/2017/03/06/formidable%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2017/03/06/formidable插件使用/</id>
    <published>2017-03-06T00:50:15.000Z</published>
    <updated>2017-04-17T16:57:57.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="formidable插件使用"><a href="#formidable插件使用" class="headerlink" title="formidable插件使用"></a>formidable插件使用</h1><h2 id="CommonJS"><a href="#CommonJS" class="headerlink" title="CommonJS"></a>CommonJS</h2><ul>
<li>JS中的模块化为AMD（requireJS）或 CMD</li>
<li>在Node中，模块化成为CommonJS；</li>
<li>require</li>
<li>exports  是module.exports的别名</li>
<li>module.exports</li>
</ul>
<h2 id="require加载模块查找规则"><a href="#require加载模块查找规则" class="headerlink" title="require加载模块查找规则"></a>require加载模块查找规则</h2><ul>
<li>优先从缓存中进行加载<ul>
<li>如果一个模块被加载过以后，会直接被缓存起来，下次加载的时候直接从缓存中读取</li>
<li>加载的是模块中 module.exports的值，而不是应用；</li>
</ul>
</li>
<li>核心模块</li>
<li>自定义模块</li>
<li>第三方模块查找顺序</li>
</ul>
<h2 id="CURD-案例"><a href="#CURD-案例" class="headerlink" title="CURD 案例"></a>CURD 案例</h2><ul>
<li>表单如果想要上传文件，必须将表单设置<code>enctype=&#39;multipart/form-data&#39;</code></li>
<li>npm init -y 快速初始化npm</li>
</ul>
<h3 id="文件上传插件-formidable-实际开发还是使用uploadify第三方插件"><a href="#文件上传插件-formidable-实际开发还是使用uploadify第三方插件" class="headerlink" title="文件上传插件 formidable,实际开发还是使用uploadify第三方插件"></a>文件上传插件 formidable,实际开发还是使用uploadify第三方插件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> form = <span class="keyword">new</span> formidable.IncomingForm();</div><div class="line">form.parse</div></pre></td></tr></table></figure>
<ul>
<li>普通的ajax请求是无法上传file的，在XMLHttpRequest2中对formData进行了支持；</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> formData = <span class="keyword">new</span> FormData();</div><div class="line">$.ajax(&#123;</div><div class="line">       <span class="attr">url</span>:<span class="string">'/add'</span>,</div><div class="line">       <span class="attr">type</span>:<span class="string">'post'</span>,</div><div class="line">       <span class="attr">dataType</span>:<span class="string">'json'</span>,</div><div class="line">       <span class="attr">data</span>:formData,</div><div class="line">       <span class="attr">processData</span>:<span class="literal">false</span>,<span class="comment">//告诉jQuery不去处理data数据</span></div><div class="line">        contentType:<span class="literal">false</span>,<span class="comment">//jquery会自动去设置请求头为application/x-www-urlencode;设置这个参数会高数jQuery不要去设置，使用其默认的enctype='multipart/form-data;</span></div><div class="line">         success:<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</div><div class="line">           <span class="comment">//自动跳转到HTML页面,进行渲染</span></div><div class="line">            <span class="keyword">if</span>(data.code==<span class="number">200</span>)&#123;</div><div class="line">                <span class="comment">//console.log(location.href);</span></div><div class="line">                location.href=<span class="string">'/'</span>;</div><div class="line">            &#125;</div><div class="line">       &#125;</div><div class="line">   &#125;)</div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"> fs.readFile(<span class="string">'./data.json'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err,data</span>)</span>&#123;</div><div class="line">    <span class="comment">//读取文件得到的数据data都是二进制格式，可以将其转换成JSON对象</span></div><div class="line">    data = <span class="built_in">JSON</span>.parse(data);</div><div class="line"></div><div class="line">&#125;)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;formidable插件使用&quot;&gt;&lt;a href=&quot;#formidable插件使用&quot; class=&quot;headerlink&quot; title=&quot;formidable插件使用&quot;&gt;&lt;/a&gt;formidable插件使用&lt;/h1&gt;&lt;h2 id=&quot;CommonJS&quot;&gt;&lt;a href
    
    </summary>
    
      <category term="Node" scheme="http://yoursite.com/categories/Node/"/>
    
    
  </entry>
  
  <entry>
    <title>常用的JS文件上传与表单插件</title>
    <link href="http://yoursite.com/2017/02/12/%E5%8D%9A%E5%AD%A6%E8%B0%B7%E9%A1%B9%E7%9B%AE%20%3C%E5%9B%9B%3E/"/>
    <id>http://yoursite.com/2017/02/12/博学谷项目 &lt;四&gt;/</id>
    <published>2017-02-12T04:39:04.000Z</published>
    <updated>2017-04-12T03:29:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用的JS文件上传与表单插件"><a href="#常用的JS文件上传与表单插件" class="headerlink" title="常用的JS文件上传与表单插件"></a>常用的JS文件上传与表单插件</h1><h2 id="BFC"><a href="#BFC" class="headerlink" title="BFC"></a>BFC</h2><ul>
<li>BFC（格式化上下文）：BFC盒子是独立布局的，盒子内元素的布局不会影响盒子外面的元素。在同一个BFC中两个相邻的盒子在垂直方向上会发生margin垂直内边距塌陷的问题；</li>
<li>BFC是指浏览器中创建来了一个独立的渲染区域，该区域内所有元素的布局不会影响到区域外元素的布局，这个渲染区域支队块级元素起作用；</li>
</ul>
<h2 id="jS插件"><a href="#jS插件" class="headerlink" title="jS插件"></a>jS插件</h2><ul>
<li>bootstrap</li>
<li>jquery</li>
<li>模块化开发：requirejs</li>
<li>滚动下拉刷新，滚动加载：onscroll</li>
<li>文件上传：uplodify</li>
<li>表单提交：jquery form</li>
<li>日期插件：bootstrap-detepicker</li>
<li>表单验证 validate</li>
<li>富文本编辑器 CKeditor</li>
<li>图片裁切 Jcrop</li>
<li>三级联动 jQuery-region</li>
<li>模板引擎 artTemplate</li>
<li>angular js</li>
<li>vue</li>
<li>react</li>
<li>node js</li>
<li>混合开发 ionic; react native</li>
</ul>
<h3 id="日期插件地址"><a href="#日期插件地址" class="headerlink" title="日期插件地址"></a>日期插件地址</h3><ul>
<li><a href="https://github.com/uxsolutions/bootstrap-datepicker" target="_blank" rel="external">bootstrap-datepicker</a></li>
</ul>
<h3 id="表单验证插件"><a href="#表单验证插件" class="headerlink" title="表单验证插件"></a>表单验证插件</h3><ul>
<li>地址： <a href="https://github.com/DiegoLopesLima/validate" target="_blank" rel="external">validate</a></li>
<li>data-required 非空判断</li>
<li>data-pattern 匹配正则</li>
<li>data-description 提示信息</li>
<li>data-describedby 指定提示信息的位置</li>
<li>data-validate 指定自定义规则的属性</li>
<li>data-conditional 自定义规则判断，值是一个规则判断函数 </li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">&lt;input name=<span class="string">'tc_join_date'</span> data-description=<span class="string">'joinDate'</span> data-describedby=<span class="string">'tcJoinDateInfo'</span> type=<span class="string">"text"</span> data-date-language=<span class="string">'zh-CN'</span> data-provide=<span class="string">'datepicker'</span> data-date-end-date=<span class="string">'0d'</span> data-date-format=<span class="string">'yyyy-mm-dd'</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control input-sm "</span> value=<span class="string">"&#123;&#123;tc_join_date&#125;&#125;"</span>&gt;</div><div class="line"></div><div class="line"> $(<span class="string">'#ajaxForm'</span>).validate(&#123;</div><div class="line">      <span class="attr">sendForm</span> : <span class="literal">false</span>,</div><div class="line">      <span class="attr">valid</span>:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</div><div class="line">          $(<span class="keyword">this</span>).ajaxSubmit(&#123;</div><div class="line">              <span class="attr">type</span>:<span class="string">'post'</span>,</div><div class="line">              <span class="attr">url</span>:url,</div><div class="line">              <span class="attr">dataType</span>:<span class="string">'json'</span>,</div><div class="line">              <span class="attr">success</span>:<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</div><div class="line">                  <span class="keyword">if</span>(data.code==<span class="number">200</span>)&#123;</div><div class="line">                      location.href = <span class="string">'/teacher/teacher_list'</span></div><div class="line">                  &#125;</div><div class="line"></div><div class="line"></div><div class="line">              &#125;</div><div class="line">          &#125;)</div><div class="line">      &#125;,</div><div class="line">      <span class="attr">description</span>:&#123;</div><div class="line">          <span class="attr">tcName</span>:&#123;</div><div class="line">              <span class="attr">required</span>:<span class="string">'用户名不能为空'</span></div><div class="line">          &#125;,</div><div class="line">          <span class="attr">tcPass</span>:&#123;</div><div class="line">              <span class="attr">required</span>:<span class="string">'密码不能为空'</span>,</div><div class="line">              <span class="attr">pattern</span>:<span class="string">'只能是六位数字'</span></div><div class="line">          &#125;,</div><div class="line">          <span class="attr">joinDate</span>:&#123;</div><div class="line">              <span class="attr">require</span>:<span class="string">'入职日期不能为空'</span></div><div class="line">          &#125;</div><div class="line"></div><div class="line">      &#125;</div><div class="line">  &#125;);</div></pre></td></tr></table></figure>
<h3 id="表单提交插件"><a href="#表单提交插件" class="headerlink" title="表单提交插件"></a>表单提交插件</h3><ul>
<li>地址：  </li>
</ul>
<ul>
<li><a href="https://github.com/jquery-form/form" target="_blank" rel="external">form</a></li>
<li>省略提交地址</li>
<li>添加新数据</li>
<li>处理回调函数  </li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#profileForm"</span>).validate(&#123;</div><div class="line">            <span class="attr">sendForm</span> : <span class="literal">false</span>,</div><div class="line">            <span class="attr">valid</span>:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line"></div><div class="line">                <span class="comment">//同步更新富文本内容变化</span></div><div class="line">                <span class="keyword">for</span>(<span class="keyword">var</span> instance <span class="keyword">in</span> CKEDITOR.instances)&#123;</div><div class="line">                    CKEDITOR.instances[instance].updateElement();</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">var</span> p = $(<span class="string">'#p'</span>).find(<span class="string">'option:selected'</span>).text();</div><div class="line">                <span class="keyword">var</span> c = $(<span class="string">'#c'</span>).find(<span class="string">'option:selected'</span>).text();</div><div class="line">                <span class="keyword">var</span> d = $(<span class="string">'#d'</span>).find(<span class="string">'option:selected'</span>).text();</div><div class="line">                <span class="keyword">var</span> hometown = p+<span class="string">'|'</span>+c+<span class="string">'|'</span>+d;</div><div class="line">                $(<span class="keyword">this</span>).ajaxSubmit(&#123;</div><div class="line">                    <span class="attr">type</span>:<span class="string">'post'</span>,</div><div class="line"></div><div class="line">                    <span class="attr">url</span>:<span class="string">'/api/teacher/modify'</span>,</div><div class="line">                    <span class="attr">data</span>:&#123;<span class="attr">tc_hometown</span>:hometown&#125;,</div><div class="line">                    <span class="attr">dataType</span>:<span class="string">'json'</span>,</div><div class="line">                    <span class="attr">success</span>:<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</div><div class="line">                        <span class="keyword">if</span>(data.code==<span class="number">200</span>)&#123;</div><div class="line">                            <span class="built_in">console</span>.log(data);</div><div class="line">                            location.reload();</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;)</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;)</div></pre></td></tr></table></figure>
<h3 id="uploadify基本使用"><a href="#uploadify基本使用" class="headerlink" title="uploadify基本使用"></a>uploadify基本使用</h3><ul>
<li><a href="http://www.uploadify.com/" target="_blank" rel="external">uploadify</a></li>
<li>fileObjName 文件名称</li>
<li>buttonText 按钮文本</li>
<li>buttonClass 按钮样式</li>
<li>fileTypeExts 支持的扩展名</li>
<li>fileSizeLimit 文件的大小限制</li>
<li>uploader 上传的路径</li>
<li>swf flash文件的位置</li>
<li>onUploadSuccess 上传成功的回调函数</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#upfile'</span>).uploadify(&#123;</div><div class="line">            <span class="attr">width</span>:<span class="number">120</span>,</div><div class="line">            <span class="attr">height</span>:<span class="number">120</span>,</div><div class="line">            <span class="attr">buttonText</span>:<span class="string">""</span>,</div><div class="line">            <span class="attr">fileObjName</span>:<span class="string">'tc_avatar'</span>,</div><div class="line">            <span class="attr">swf</span>:<span class="string">'/public/assets/uploadify/uploadify.swf'</span>,</div><div class="line">            <span class="attr">uploader</span>:<span class="string">'/api/uploader/avatar'</span>,</div><div class="line">            <span class="attr">onUploadSuccess</span>:<span class="function"><span class="keyword">function</span> (<span class="params">file,data</span>) </span>&#123;</div><div class="line">                <span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(data);</div><div class="line">                $(<span class="string">'.preview img'</span>).attr(<span class="string">'src'</span>,data.result.path);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div></pre></td></tr></table></figure>
<h3 id="php文件上传处理"><a href="#php文件上传处理" class="headerlink" title="php文件上传处理"></a>php文件上传处理</h3><ul>
<li>$_FILES 用来获取上传的文件（具体包含了一些参数）</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">Array</span></div><div class="line">(</div><div class="line">    [picture] =&gt; <span class="keyword">Array</span></div><div class="line">        (</div><div class="line">            [name] =&gt; abc.png  文件的名称</div><div class="line">            [type] =&gt; application/octet-stream  文件的传输格式</div><div class="line">            [tmp_name] =&gt; D:\wamp\tmp\phpDE88.tmp  服务器临时文件路径</div><div class="line">            [error] =&gt; <span class="number">0</span> 错误代码</div><div class="line">            [size] =&gt; <span class="number">1792</span> 文件大小</div><div class="line">        )</div><div class="line">)</div></pre></td></tr></table></figure>
<ul>
<li>move_uploaded_file 移动文件</li>
</ul>
<h3 id="背景图片截图插件"><a href="#背景图片截图插件" class="headerlink" title="背景图片截图插件"></a>背景图片截图插件</h3><ul>
<li>Jcrop</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">   <span class="keyword">var</span> picture = $(<span class="string">'.preview img'</span>),jcrop_api;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">cropPic</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    jcrop_api&amp;&amp;jcrop_api.destroy();</div><div class="line">    picture.Jcrop(&#123;</div><div class="line">        <span class="comment">// bgColor:'pink',//设置选取的背景颜色</span></div><div class="line">        acpectRatio:<span class="number">2</span>,<span class="comment">//设置宽高比</span></div><div class="line">        keySupport:<span class="literal">true</span>,<span class="comment">//支持键盘控制</span></div><div class="line">        boxWidth:<span class="number">400</span>,<span class="comment">//设置背景图片,即画布的宽高</span></div><div class="line">        <span class="comment">//boxHeight:400,</span></div><div class="line">    &#125;,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="comment">//回调函数</span></div><div class="line">        picture_api = <span class="keyword">this</span>;</div><div class="line">        <span class="comment">//获取画布的宽度和高度;</span></div><div class="line">        <span class="keyword">var</span> width = <span class="keyword">this</span>.ui.stage.width,</div><div class="line">            height = <span class="keyword">this</span>.ui.stage.height,</div><div class="line">            x = <span class="number">0</span>,</div><div class="line">            y = height/<span class="number">4</span>;</div><div class="line">        <span class="comment">//console.log(height);</span></div><div class="line">        picture_api.newSelection();</div><div class="line">        <span class="comment">//设置图片加载完成后,选框自动选中的位置</span></div><div class="line">        <span class="comment">//picture_api.setSelect([x,y,width,height/2]);</span></div><div class="line">        picture_api.animateTo([x,y,width,height/<span class="number">2</span>]);</div><div class="line">        <span class="comment">//获取截取图片的x,y,w,h;</span></div><div class="line">    &#125;)</div></pre></td></tr></table></figure>
<h3 id="富文本编辑器"><a href="#富文本编辑器" class="headerlink" title="富文本编辑器"></a>富文本编辑器</h3><ul>
<li><a href="http://ueditor.baidu.com/website/" target="_blank" rel="external">ueditor</a></li>
<li><a href="http://ckeditor.com/" target="_blank" rel="external">ckeditor</a></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;textarea id=<span class="string">'text'</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span></div><div class="line"><span class="comment">//加载富文本</span></div><div class="line">        CKEDITOR.replace(<span class="string">'ckeditor'</span>, &#123;</div><div class="line">            <span class="comment">//toolbarGroups:[]</span></div><div class="line">        &#125;);</div><div class="line">        <span class="comment">//同步更新富文本内容变化</span></div><div class="line">           <span class="keyword">for</span>(<span class="keyword">var</span> instance <span class="keyword">in</span> CKEDITOR.instances)&#123;</div><div class="line">               CKEDITOR.instances[instance].updateElement();</div><div class="line">           &#125;</div></pre></td></tr></table></figure>
<h3 id="三级联动"><a href="#三级联动" class="headerlink" title="三级联动"></a>三级联动</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;div class='region'&gt;</div><div class="line">    &lt;select name="tc_province" id='p' data-id=&#123;&#123;tc_province&#125;&#125; class="form-control input-sm"&gt;</div><div class="line">                &lt;option &gt;请选择省&lt;/option&gt;</div><div class="line"></div><div class="line">  &lt;/select&gt;</div><div class="line">  &lt;select name="tc_city" id='c' data-id=&#123;&#123;tc_city&#125;&#125; class="form-control input-sm"&gt;</div><div class="line">      &lt;option &gt;请选择市&lt;/option&gt;</div><div class="line">  &lt;/select&gt;</div><div class="line">  &lt;select name="tc_district" id='d' data-id=&#123;&#123;tc_district&#125;&#125; class="form-control input-sm"&gt;</div><div class="line">      &lt;option &gt;请选择区县&lt;/option&gt;</div><div class="line">  &lt;/select&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">    //三级联动,加载数据</div><div class="line">$('.region').region(&#123;</div><div class="line">    url:'../lib/jquery-region/region.json'</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h2 id="编程理论基础"><a href="#编程理论基础" class="headerlink" title="编程理论基础"></a>编程理论基础</h2><ul>
<li>服务器</li>
<li>项目开发流程</li>
<li>编程，逻辑思维</li>
<li>模块化（nodejs/fis/webpack）</li>
<li>路径</li>
<li>路由</li>
<li>数据库</li>
<li>协议（网络通信）</li>
<li>网站（静态网站和动态网站）</li>
<li>后台接口</li>
<li>前端渲染和后台渲染</li>
</ul>
<h2 id="小知识点"><a href="#小知识点" class="headerlink" title="小知识点"></a>小知识点</h2><ul>
<li><p>原生的绑定事件会发生覆盖</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>jquery的绑定事件都是会叠加</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#btn'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;);</div><div class="line">$(<span class="string">'#btn'</span>).bind(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;);</div></pre></td></tr></table></figure>
</li>
<li><p><code>location.search</code>得到的是URL地址中所有的参数<code>?tc_id=3&amp;username=12</code>;</p>
</li>
</ul>
<ul>
<li><p>可以通过<code>location</code>来获取地址栏中所携带的所有信息；</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> pathname = location.search;</div><div class="line"><span class="keyword">var</span> pcname = pathname.sclice(<span class="number">1</span>); <span class="comment">//将？截取掉</span></div><div class="line"><span class="keyword">var</span> obj = &#123;&#125;;</div><div class="line"><span class="keyword">var</span> arr = pcname.split(<span class="string">'&amp;'</span>);</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> obj)&#123;</div><div class="line">    <span class="keyword">var</span> kv = arr[i].split(<span class="string">'='</span>);</div><div class="line">    obj[kv[<span class="number">0</span>]]=kv[<span class="number">1</span>];</div><div class="line">    <span class="keyword">return</span> obj;</div><div class="line">    <span class="comment">//将URL中的参数和值以键值对的形式放到obj中；</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li>PHP中，将数组以json对象的形式输出： <code>json_encode($arr)</code>；</li>
</ul>
<h2 id="表单验证插件-1"><a href="#表单验证插件-1" class="headerlink" title="表单验证插件"></a>表单验证插件</h2><ul>
<li>form表单中，不写提交地址，默认提交到当前页面，地址栏中；</li>
<li><code>jquery-validate</code>表单验证的插件；</li>
<li><code>jquery-form</code>表单提交的插件 <code>$(&#39;form&#39;).ajaxSubmit({ })</code></li>
<li>文件上传插件 <code>webupload</code>和<code>uploadify</code></li>
</ul>
<p>你都做过什么，遇到什么问题，你是怎么解决的；<br>nodejs是怎么用的；</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;常用的JS文件上传与表单插件&quot;&gt;&lt;a href=&quot;#常用的JS文件上传与表单插件&quot; class=&quot;headerlink&quot; title=&quot;常用的JS文件上传与表单插件&quot;&gt;&lt;/a&gt;常用的JS文件上传与表单插件&lt;/h1&gt;&lt;h2 id=&quot;BFC&quot;&gt;&lt;a href=&quot;#BF
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
  </entry>
  
  <entry>
    <title>前端发送请求的方式</title>
    <link href="http://yoursite.com/2017/02/12/%E5%8D%9A%E5%AD%A6%E8%B0%B7%E9%A1%B9%E7%9B%AE%20%3C%E4%BA%8C%3E/"/>
    <id>http://yoursite.com/2017/02/12/博学谷项目 &lt;二&gt;/</id>
    <published>2017-02-12T02:39:04.000Z</published>
    <updated>2017-04-12T02:51:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="域名解析系统"><a href="#域名解析系统" class="headerlink" title="域名解析系统"></a>域名解析系统</h2><ul>
<li>先去本机的host的文件查找对应的IP,如果在本机host文件中找到,就返回对应的IP;如果没有的话,就去公网查找,公网没有的话就无法上网;</li>
</ul>
<h2 id="前端发送请求的方式"><a href="#前端发送请求的方式" class="headerlink" title="前端发送请求的方式"></a>前端发送请求的方式</h2><ul>
<li>地址栏直接输入URL</li>
<li>表单的action属性</li>
<li>a标签的href属性;link的href</li>
<li>src属性:img的src;script的src; iframe的src</li>
<li>ajax发送请求</li>
<li>postMessage H5新的API</li>
<li>flash插件</li>
<li>location.href<ol>
<li>补充:URL的规范格式 scheme://host:port /path?query#frament;</li>
</ol>
<ul>
<li>scheme 表示协议 http https ftp file ssh;</li>
<li>host 表示域名或者IP地址;</li>
<li>port 端口;用来确定计算机上某个网络应用程序;</li>
<li>path 路径;域名之后,参数(?)之前的内容:/abc/qqq等</li>
<li>query 查询字符串;作用,向服务器传递参数数据;格式:键=值&amp;键=值</li>
<li>frament: hash 锚点,定位页面的某一部分;结合ID;</li>
</ul>
</li>
</ul>
<h2 id="路径问题"><a href="#路径问题" class="headerlink" title="路径问题"></a>路径问题</h2><ul>
<li>绝对路径 / 等效于直接写IP地址<a href="http://localhost" target="_blank" rel="external">http://localhost</a></li>
<li>相对路径:  ./代表当前路径 ../代表上层路径</li>
<li>跳转到根路径<code>&lt;a href=&quot;/tom.html&quot;&gt;</code></li>
</ul>
<h2 id="cookie和session"><a href="#cookie和session" class="headerlink" title="cookie和session"></a>cookie和session</h2><ul>
<li>cookie写入之后,只要是访问同一个网站,都会带着cookie进行访问;</li>
<li>在PHP中session start();开启session会话;让服务器知道曾经来过,保存访问状态;SESSID</li>
<li>session是服务端的,客户端向服务端发送SESSID,进行服务器与客户端的关联,服务器返回该用户的信息;</li>
<li>SESSID可以保持客户端与服务器之间的联系状态;实现不同页面间的数据共享</li>
</ul>
<h2 id="跨域解决方案"><a href="#跨域解决方案" class="headerlink" title="跨域解决方案"></a>跨域解决方案</h2><ul>
<li><p>jsonp</p>
<ul>
<li>jsonp返回的数据应该是函数的调用<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ecName = $_GET[<span class="string">'callback'</span>];<span class="comment">//获取到函数名;</span></div><div class="line">echo $ecName.<span class="string">"("</span>data.<span class="string">")"</span>;<span class="comment">//返回函数的调用;</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>cors 配置服务器,</p>
</li>
<li>反向代理 其原理类似于CORS</li>
<li>flash插件,但是现在已经很少用了;</li>
</ul>
<h2 id="PHP-相关问题"><a href="#PHP-相关问题" class="headerlink" title="PHP 相关问题"></a>PHP 相关问题</h2><ul>
<li>PHP既可以做前端页面渲染,也可以单独作为接口返回数据;</li>
<li>&lt;?php include()?&gt;(PHP中导入页面)<br><code>count($arr == 2)</code> 等同于js中<code>arr.length == 2</code>;</li>
</ul>
<h2 id="模块化规范"><a href="#模块化规范" class="headerlink" title="模块化规范"></a>模块化规范</h2><ul>
<li>浏览器端的规范：<ol>
<li>AMD：requirejs</li>
<li>CMD:seajs （淘宝的技术）</li>
<li>commonjs - nodejs 同步加载，后端的奇数</li>
</ol>
</li>
<li>服务器端的规范<ol>
<li>commonjs:nodejs </li>
</ol>
</li>
</ul>
<h2 id="requirejs使用"><a href="#requirejs使用" class="headerlink" title="requirejs使用"></a>requirejs使用</h2><ol>
<li>解决了命名冲突 （不同模块中的相同变量不会冲突）</li>
<li>解决了文件依赖问题</li>
<li>如果requirejs加载的时候，指定了data-main属性，那么根路径就变成了入口文件所处的路径;<ol>
<li>不使用data-main的时候，在通过require加载文件时可以直接使用相对路径；</li>
<li>但是在使用data-main的同时，再使用require加载其他模块文件，文件的根路径发生了改变，此时可以重新定义默认的根路径；</li>
<li>requirejs处理非模块化文件</li>
</ol>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"> &lt;script src=<span class="string">'require.js'</span> data-main=<span class="string">'main.js'</span> &gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line"> &lt;script&gt;</div><div class="line">     <span class="comment">//加载文件，通过data-main的路径进行定位</span></div><div class="line">     <span class="built_in">require</span>([<span class="string">'./m4'</span>]);</div><div class="line">     <span class="comment">//或者重新设置默认的根路径</span></div><div class="line">     <span class="built_in">require</span>.config(&#123;</div><div class="line">         <span class="attr">baseUrl</span>:<span class="string">'./js/'</span></div><div class="line">     &#125;);</div><div class="line">     <span class="comment">//相对于根路径的路径</span></div><div class="line">     <span class="built_in">require</span>([<span class="string">'/module/m4'</span>]);</div><div class="line">      <span class="comment">//将abc文件中foo的非模块化文件到处成为模块化文件</span></div><div class="line">    shim:&#123;</div><div class="line">        <span class="string">'../abc'</span>:&#123;</div><div class="line">         <span class="comment">//给模块起一个别名；如果自定义模块起了一个名字，在用的时候必须与那个名字保持一致；</span></div><div class="line">            exports:<span class="string">'foo'</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">          paths:&#123;</div><div class="line">         <span class="attr">ggg</span>:<span class="string">"js/jquery"</span>;</div><div class="line">    &#125;</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;域名解析系统&quot;&gt;&lt;a href=&quot;#域名解析系统&quot; class=&quot;headerlink&quot; title=&quot;域名解析系统&quot;&gt;&lt;/a&gt;域名解析系统&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;先去本机的host的文件查找对应的IP,如果在本机host文件中找到,就返回对应的IP;如果没有
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Angular在实际应用中的优缺点</title>
    <link href="http://yoursite.com/2017/02/12/angular%E5%9C%A8%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8%E4%B8%AD%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9/"/>
    <id>http://yoursite.com/2017/02/12/angular在实际应用中的优缺点/</id>
    <published>2017-02-11T16:39:04.000Z</published>
    <updated>2017-04-17T17:31:10.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ul>
<li>我们是在做创意摄影网时使用的Angular.js 的，</li>
<li>优点：<ul>
<li>模板功能强大丰富，并且是声明式的，自带了丰富的Angular指令</li>
<li>是一个比较完善的前端MV*框架，包含模板、数据双向绑定、路由、模块化、服务、过滤器和依赖注入等所有功能；</li>
<li>自定义 Directive ，比jQuery插件还灵活；</li>
<li>ng模块化比较大胆的引入了JAVA的一些东西(依赖注入)，能够很容易的写出可复用性的代码；</li>
<li>Angular支持单元测试</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;我们是在做创意摄影网时使用的Angular.js 的，&lt;/li&gt;
&lt;li&gt;优点：&lt;ul&gt;
&lt;li&gt;模板功能强大丰富，并且是声明式
    
    </summary>
    
      <category term="Angular" scheme="http://yoursite.com/categories/Angular/"/>
    
    
  </entry>
  
  <entry>
    <title>同步操作与异步操作的异同</title>
    <link href="http://yoursite.com/2017/01/19/%E5%90%8C%E6%AD%A5%E6%93%8D%E4%BD%9C%E4%B8%8E%E5%BC%82%E6%AD%A5%E6%93%8D%E4%BD%9C%E7%9A%84%E5%BC%82%E5%90%8C/"/>
    <id>http://yoursite.com/2017/01/19/同步操作与异步操作的异同/</id>
    <published>2017-01-19T04:39:04.000Z</published>
    <updated>2017-04-12T06:42:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="小知识点"><a href="#小知识点" class="headerlink" title="小知识点"></a>小知识点</h1><ol>
<li>Node命令本质上是一个 应用程序；</li>
<li>Node的核心模块<ul>
<li>文件读写 fs</li>
<li>构建Http服务 http</li>
</ul>
</li>
<li>第三方模块<ul>
<li>npm install 第三方模块名称</li>
<li>使用require 函数加载</li>
<li>看文档使用  </li>
<li>moment 格式化事件moment(time).format(‘YYYY-MM-DD HH:mm:ss’)</li>
</ul>
</li>
<li>在Node中使用art-template 模块引擎；</li>
<li>浏览器默认不支持JavaScript模块化，只能通过script标签去加载模块以及他们之间的依赖；</li>
<li>node天生支持模块化<ul>
<li>模块与模块之间提供可特定的通信交互规则<ul>
<li>module.exports  相当于return</li>
<li>require 相当于requireJS中的额 define[依赖项]，function（依赖项）；</li>
<li>exports</li>
</ul>
</li>
</ul>
</li>
</ol>
<ul>
<li>一个JS文件就是一个模块化；</li>
<li>一个模块化就是私有作用域（没有全局作用域的概念）； </li>
</ul>
<ol>
<li>将编码之后的中文解码： decodeURI(URL) ；将中文转换成code编码格式：encodeURI(URL);</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">encodeURI</span>(<span class="string">'中国'</span>)</div><div class="line">---&gt; <span class="string">"%E4%B8%AD%E5%9B%BD"</span></div><div class="line"><span class="built_in">decodeURI</span>(<span class="string">'%E4%B8%AD%E5%9B%BD'</span>)</div><div class="line">===&gt; <span class="string">"中国"</span></div></pre></td></tr></table></figure>
<ol>
<li><code>data = JSON.stringify(data,null,&quot;  &quot;)</code>将对象格式的文件转换成字符串格式，第三个参数为<code>“  ”</code>，中间是两个空格，表示向后台提交数据的时候，仍然保持两个空格的缩进；</li>
<li>没有文件的 POST 提交，还是会把数据格式化成为查询字符串的格式，也就是相当于（get参数）的方式进行提交；有文件上传的是form Data的格式提交</li>
</ol>
<h2 id="同步操作与异步操作的异同"><a href="#同步操作与异步操作的异同" class="headerlink" title="同步操作与异步操作的异同"></a>同步操作与异步操作的异同</h2><ol>
<li>异步API</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(<span class="number">111</span>);</div><div class="line">fs.readfile(<span class="string">'./data/a.txt'</span>),<span class="function"><span class="keyword">function</span>(<span class="params">err,data</span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="number">222</span>);</div><div class="line">&#125;</div><div class="line">fs.readfile(<span class="string">'./data/a.txt'</span>),<span class="function"><span class="keyword">function</span>(<span class="params">err,data</span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="number">444</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">consle.log(<span class="number">333</span>);</div><div class="line"><span class="comment">//输出的结果是：</span></div><div class="line"><span class="comment">//111;333; 222和444的顺序的不一定的；</span></div><div class="line"><span class="comment">//222和444是异步进行的，无法保证其先后顺序；</span></div></pre></td></tr></table></figure>
<ol>
<li>同步API fs.readFileSync(‘./data/a.txt’)<ul>
<li>var dataA = fs.readFileSync(‘./data/a.txt’).toString();默认读取到的是二进制数据；</li>
<li>同步ＡＰＩ是按照先后顺序执行的； </li>
</ul>
</li>
<li>关于文件中的同步和异步，优先使用异步操作<ul>
<li>异步操作都是通过一个回调函数来获取异步操作结果，第一个参数是err;<ul>
<li>有限判断err是否出错</li>
<li>操作成功，err就是null；</li>
<li>操作失败，err 就是错误对象</li>
<li>在异步操作中，无法使用try-catch捕获异常；</li>
</ul>
</li>
</ul>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">    <span class="comment">//异步读取不能使用try catch 捕获异常</span></div><div class="line"> <span class="keyword">try</span>&#123;</div><div class="line">    fs.readFile(<span class="string">'./0-hello word.js'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">err,data</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(data);</div><div class="line">    <span class="comment">//得到的data是undefined；因为错误，读取不到信息</span></div><div class="line">    &#125;);</div><div class="line">&#125;<span class="keyword">catch</span> (e)&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'失败'</span>)</div><div class="line">&#125;</div><div class="line"><span class="comment">//同步读取可以使用 try-catch捕获异常</span></div></pre></td></tr></table></figure>
<ul>
<li>同步操作直接使用变量去接收操作结果； </li>
</ul>
<h2 id="封装异步API"><a href="#封装异步API" class="headerlink" title="封装异步API"></a>封装异步API</h2><ul>
<li>通过callback去拿结果</li>
<li>如果自定义异步API中有异常错误，继续使用callback向外抛出</li>
</ul>
<h3 id="使用nodemon-实现改完代码服务自动重启"><a href="#使用nodemon-实现改完代码服务自动重启" class="headerlink" title="使用nodemon 实现改完代码服务自动重启"></a>使用nodemon 实现改完代码服务自动重启</h3><ul>
<li>npm install –g nodemon</li>
<li>使用<ul>
<li>nodemon.app.js </li>
</ul>
</li>
</ul>
<h1 id="Web中的路径"><a href="#Web中的路径" class="headerlink" title="Web中的路径"></a>Web中的路径</h1><ul>
<li>url本质上只是一个标识而已，所以看到的文件名不一定是真实的文件名</li>
<li>绝大多数情况下，需要开发人员自定义标识<ul>
<li>为了好看，路由更简单</li>
<li>为了更加灵活的控制</li>
<li>URL路径以<code>“/”</code>开头，是绝对路径</li>
</ul>
</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;link href=<span class="string">"/assets/css/main.css"</span>&gt;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;小知识点&quot;&gt;&lt;a href=&quot;#小知识点&quot; class=&quot;headerlink&quot; title=&quot;小知识点&quot;&gt;&lt;/a&gt;小知识点&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Node命令本质上是一个 应用程序；&lt;/li&gt;
&lt;li&gt;Node的核心模块&lt;ul&gt;
&lt;li&gt;文件读写 fs&lt;/l
    
    </summary>
    
      <category term="Node" scheme="http://yoursite.com/categories/Node/"/>
    
    
  </entry>
  
</feed>
